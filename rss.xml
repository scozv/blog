<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">


<channel>
  <title>Code this.</title>
  <description>Code this. - Scott</description>
  <link>https://scozv.github.io/blog/rss.xml</link>
  <link>https://scozv.github.io/blog</link>
  <lastBuildDate>2019-02-17T22:37:05+08:00</lastBuildDate>
  <pubDate>2019-02-17T22:37:05+08:00</pubDate>
  <ttl>1800</ttl>
  
    
      <item>
        <title>Putting Tracking Id to Log Message with Customized Akka Dispatcher and Mapped Diagnostic Contexts in Play 2.6</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Two approaches of adding global value to Mapped Diagnostic Contexts（MDC)
have been introduced in the post of 2014 by Yann Simon&lt;sup id=&quot;fnref:_blog_yanns_mdc_play&quot;&gt;&lt;a href=&quot;#fn:_blog_yanns_mdc_play&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.
Since the global value could be added into MDC,
the Tracking Id used for tracking the log messages for each HTTP Request
can be also added into the MDC.&lt;/p&gt;

  &lt;p&gt;This post initially introduces the background of Tracking Id
and the approaches mentioned in Yann’s post. Then describes some improve
or issues during the implementation.
A critical or blocked issue is &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; not added in every log message,
and a similiar issue is also mention in Github&lt;sup id=&quot;fnref:_github_rishabh9_issue1&quot;&gt;&lt;a href=&quot;#fn:_github_rishabh9_issue1&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

  &lt;p&gt;Logging the thread name is useful for locating the reason of issue.
According to thread information of log messages, a solution or fix that&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;changing the configuration name &lt;code class=&quot;highlighter-rouge&quot;&gt;play.akka.actor&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;akka.actor&lt;/code&gt;, and&lt;/li&gt;
    &lt;li&gt;replacing &lt;code class=&quot;highlighter-rouge&quot;&gt;scala.concurrent.ExecutionContext&lt;/code&gt; with injected object&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;has been found and applied.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;Introduction&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#use-case-and-design-of-tracking-id&quot; id=&quot;markdown-toc-use-case-and-design-of-tracking-id&quot;&gt;Use Case and Design of Tracking Id&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#implementation-of-tracking-id&quot; id=&quot;markdown-toc-implementation-of-tracking-id&quot;&gt;Implementation of Tracking Id&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#holding-trackingid-in-context-of-golang&quot; id=&quot;markdown-toc-holding-trackingid-in-context-of-golang&quot;&gt;Holding &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; in Context of Golang&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#using-httpfilter-and-dispatcher-in-scala&quot; id=&quot;markdown-toc-using-httpfilter-and-dispatcher-in-scala&quot;&gt;Using HttpFilter and Dispatcher in Scala&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tips-in-implementation&quot; id=&quot;markdown-toc-tips-in-implementation&quot;&gt;Tips in Implementation&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#diagnosis-of-tracking-id-not-written-in-log-message&quot; id=&quot;markdown-toc-diagnosis-of-tracking-id-not-written-in-log-message&quot;&gt;Diagnosis of Tracking Id not Written in Log Message&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#issue-description&quot; id=&quot;markdown-toc-issue-description&quot;&gt;Issue Description&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#solution-for-tracking-id-missing&quot; id=&quot;markdown-toc-solution-for-tracking-id-missing&quot;&gt;Solution for Tracking Id Missing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#replacing-executioncontextglobal-with-injected-object&quot; id=&quot;markdown-toc-replacing-executioncontextglobal-with-injected-object&quot;&gt;Replacing ExecutionContext.global with Injected Object&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#improve-of-tracking-id&quot; id=&quot;markdown-toc-improve-of-tracking-id&quot;&gt;Improve of Tracking Id&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Applying the Software Engineering means more attention
should be paid on Engineering, efficient delivery and
reliable system monitoring, instead of endless dispute on
programming language A must be better than B.&lt;/p&gt;

&lt;p&gt;Initially setting up the team with similar programming stack,
then the Lead spends much more effort on testing, coverage, and
also log system, health check, and software metric.&lt;/p&gt;

&lt;p&gt;The runtime error in production MUST be fixed as soon as
possible. Since the regular diagnostic information comes from
the log message, querying the issue related log message quickly
is the key to locating the reason of issue. Tracking Id is
an random string generated for each HTTP Request, this unique string
will be appended in each log message related to a HTTP Request.
Searching the log messages by &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; can find out the
exact happened story for each specific HTTP Request.&lt;/p&gt;

&lt;h2 id=&quot;use-case-and-design-of-tracking-id&quot;&gt;Use Case and Design of Tracking Id&lt;/h2&gt;

&lt;p&gt;High volume of concurrence and loose coupling of distributed deployment are
two generic facts of current system design. The log files stored in difference
server become larger. Meanwhile, the log messages related to a specific HTTP
Request CANNOT be written linearly.&lt;/p&gt;

&lt;p&gt;Here is an example for two requests:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:06:55.560Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] user 1 connected
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:06:57.121Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] get token from redis
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:03.289Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] start the query with parameter &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;...&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:03.981Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] user 2 connected
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:05.192Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;WARN] get result with 1029ms
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:05.207Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] get token from redis
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:05.285Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ERROR] invalid token&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Reading the large log file from
multiple server nodes with &lt;code class=&quot;highlighter-rouge&quot;&gt;tail -f application.log&lt;/code&gt; is impossible to
locating the issue in 5 minutes.&lt;/p&gt;

&lt;p&gt;However, with appending &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; in log message shown below,
the exact linear story can be extracted from the large log files:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:06:55.560Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tracking-id-0001] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] user 1 connected
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:06:57.121Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tracking-id-0001] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] get token from redis
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:03.289Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tracking-id-0001] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] start the query with parameter &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;...&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:03.981Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tracking-id-1024] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] user 2 connected
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:05.192Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tracking-id-0001] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;WARN] get result with 1029ms
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:05.207Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tracking-id-1024] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEBUG] get token from redis
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2017-07-17T19:07:05.285Z] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tracking-id-1024] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ERROR] invalid token&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A flow of generating and passing the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; in Play 2.6 is designed as below:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;HTTP Request accepted in backend server side,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; generated for each request in &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpFilter&lt;/code&gt; of Play,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; passed to MDC and appended to log message,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; inserted into the header of HTTP Response,&lt;/li&gt;
  &lt;li&gt;frontend side received the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The approaches provided in Yann Simon’s post are used for passing the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt;
to Mapped Diagnostic Contexts (MDC). So that we can use the Logback pattern with &lt;code class=&quot;highlighter-rouge&quot;&gt;%mdc{trackingId}&lt;/code&gt; to write &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; in log messages:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FILE&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.FileAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;${application.home:-.}/logs/application.log&lt;span class=&quot;nt&quot;&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;encoder&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;%date [%level] [%mdc{trackingId:--}] %message%n%xException&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/encoder&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;implementation-of-tracking-id&quot;&gt;Implementation of Tracking Id&lt;/h1&gt;

&lt;h2 id=&quot;holding-trackingid-in-context-of-golang&quot;&gt;Holding &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; in Context of Golang&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;%mdc&lt;/code&gt; pattern or fommatter is not supported in &lt;code class=&quot;highlighter-rouge&quot;&gt;cihub/seelog&lt;/code&gt;
package of Golang&lt;sup id=&quot;fnref:_github_cihub_seelog_format_ref&quot;&gt;&lt;a href=&quot;#fn:_github_cihub_seelog_format_ref&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. David Budworth
explained this in Stackoverflow as&lt;sup id=&quot;fnref:_sf_david_bud_mdc_java_go&quot;&gt;&lt;a href=&quot;#fn:_sf_david_bud_mdc_java_go&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Java MDC relies on thread local storage, something Go does not have.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An alternative solution is holding the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; in a global context,
such as creating a &lt;code class=&quot;highlighter-rouge&quot;&gt;RequestContext&lt;/code&gt; basing on the &lt;code class=&quot;highlighter-rouge&quot;&gt;gin.Context&lt;/code&gt;&lt;sup id=&quot;fnref:_note_where_go_code_from&quot;&gt;&lt;a href=&quot;#fn:_note_where_go_code_from&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TrackingId&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TrackingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GenGuid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Also, passing the &lt;code class=&quot;highlighter-rouge&quot;&gt;RequestContext&lt;/code&gt; to the method where the
logger needed:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getRequestContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// ..., err =&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Errorf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buildLogMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Failed in fooAction: $v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The method named &lt;code class=&quot;highlighter-rouge&quot;&gt;getRequestContext&lt;/code&gt; has two purposes, one is getting the
&lt;code class=&quot;highlighter-rouge&quot;&gt;RequestContext&lt;/code&gt; if any (&lt;code class=&quot;highlighter-rouge&quot;&gt;val.(*RequestContext)&lt;/code&gt;), another is
creating a new &lt;code class=&quot;highlighter-rouge&quot;&gt;RequestContext&lt;/code&gt; if not existing.&lt;/p&gt;

&lt;p&gt;Since seelog doesn’t support &lt;code class=&quot;highlighter-rouge&quot;&gt;%mdc{}&lt;/code&gt; pattern, &lt;code class=&quot;highlighter-rouge&quot;&gt;buildLogMessage&lt;/code&gt;
can be used for appending the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; into the log message.&lt;/p&gt;

&lt;p&gt;With the pattern below, &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; will be considered as
a part of log message:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FILE&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.FileAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;${application.home:-.}/logs/application.log&lt;span class=&quot;nt&quot;&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;encoder&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;%date [%level] %message%n%xException&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/encoder&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Only need is prepending the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; to the log message body,
to keep the same format of log both in Scala and Java:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;// with MDC
%date [%level] [%mdc{trackingId:--}] %message%n%xException

// in Golang
%date [%level] %message%n%xException

func buildLogMessage(ctx *RequestContext, format string, parms ...interface{}) string {
  // [trackingId] msg
  f := fmt.Sprintf(&quot;[%s] &quot;, ctx.TrackingId) + format
  return fmt.Sprintf(f, parms...)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;using-httpfilter-and-dispatcher-in-scala&quot;&gt;Using HttpFilter and Dispatcher in Scala&lt;/h2&gt;

&lt;p&gt;As mentioned in Yann Simon’s post&lt;sup id=&quot;fnref:_blog_yanns_mdc_play:1&quot;&gt;&lt;a href=&quot;#fn:_blog_yanns_mdc_play&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To record the values in the MDC, Logback uses a ThreadLocal variable. This strategy works when one thread is used for one request. The implementation of the MDC with a ThreadLocal cannot work with this non-blocking asynchronous threading model in Play.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Two steps need to be implemented for &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Generating the unique string for each request,&lt;/li&gt;
  &lt;li&gt;Passing the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; in different threads.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpFilter&lt;/code&gt; of Play Framework is a feature that makes
it possible to run some code before or after the actions are
invoked&lt;sup id=&quot;fnref:_book_julien_foy_2014&quot;&gt;&lt;a href=&quot;#fn:_book_julien_foy_2014&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; is generated before the actions are invoked,
then it will be inserted into HTTP Response header
after the actions are invoked. Frontend reports the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt;
in HTTP Response when runtime error happens.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TrackingFilter&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Inject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExecutionContext&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EssentialFilter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;EssentialAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EssentialAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestHeader&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RequestHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ByteString&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackingId&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randomUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toString&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;MDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;trackingId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-Tracking-Id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nc&quot;&gt;MDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;trackingId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; generated in &lt;code class=&quot;highlighter-rouge&quot;&gt;TrackingFilter&lt;/code&gt; needs to be passed into the MDC of
different threads, where the Customized Akka Dispatcher or ExecutionContext mentioned by
Yann Simon is needed.&lt;/p&gt;

&lt;p&gt;The main implementation of customized Akka Dispatcher copied as below,
The switch of different threads happenes in &lt;code class=&quot;highlighter-rouge&quot;&gt;self.execute(() =&amp;gt; {})&lt;/code&gt;, where a new
Runnable instance is created:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;runnable&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldMDCContext&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getCopyOfContextMap&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;setContextMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mdcContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setContextMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oldMDCContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;tips-in-implementation&quot;&gt;Tips in Implementation&lt;/h2&gt;

&lt;p&gt;Play Framework has been shipped with Dependency Injection
from 2.4 &lt;sup id=&quot;fnref:_play_di_in_24&quot;&gt;&lt;a href=&quot;#fn:_play_di_in_24&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;, in version 2.6, &lt;code class=&quot;highlighter-rouge&quot;&gt;Controller&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ExecutionContext.global&lt;/code&gt;
has been deprecated and replaced with injected case class&lt;sup id=&quot;fnref:_play_di_in_26&quot;&gt;&lt;a href=&quot;#fn:_play_di_in_26&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;.
When &lt;code class=&quot;highlighter-rouge&quot;&gt;TrackingFilter&lt;/code&gt; is used as an injected class, we need configure to use Filters
in &lt;code class=&quot;highlighter-rouge&quot;&gt;play.http.filters&lt;/code&gt; conf item&lt;sup id=&quot;fnref:_play_http_filters&quot;&gt;&lt;a href=&quot;#fn:_play_http_filters&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;After that, we will learn from the server starting log that Play enabled four &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpFilter&lt;/code&gt; by default:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] p.a.h.EnabledFilters - Enabled Filters &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;see &amp;lt;https://www.playframework.com/documentation/latest/Filters&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:

    play.filters.csrf.CSRFFilter
    play.filters.headers.SecurityHeadersFilter
    play.filters.hosts.AllowedHostsFilter
    play.filters.cors.CORSFilter

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] play.api.Play - Application started &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Dev&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Being enable of &lt;code class=&quot;highlighter-rouge&quot;&gt;AllowedHostsFilter&lt;/code&gt; may receive some
error saying “Host not allowed: server-name”, or “Host not allowed: private-ip”
in some IaaS platform using the load balance for health check.
In this case, a white list of allowed hosts should be configured&lt;sup id=&quot;fnref:_play_host_allowed&quot;&gt;&lt;a href=&quot;#fn:_play_host_allowed&quot; class=&quot;footnote&quot;&gt;10&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Another solution for fixing the “Host not allowed: server-name” error is removing
&lt;code class=&quot;highlighter-rouge&quot;&gt;AllowedHostsFilter&lt;/code&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Filters&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Inject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;defaultFilters&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;EnabledFilters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;tracking&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackingFilter&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DefaultHttpFilters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaultFilters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AllowedHostsFilter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tracking&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A final tip for customized Dispatcher is the name of
dispatcher conf node may be &lt;code class=&quot;highlighter-rouge&quot;&gt;akka.actor&lt;/code&gt;, instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;play.akka.actor&lt;/code&gt;
mentioned in Yann Simon’s post. Anyway, runtime will choose a correct one.&lt;/p&gt;

&lt;h1 id=&quot;diagnosis-of-tracking-id-not-written-in-log-message&quot;&gt;Diagnosis of Tracking Id not Written in Log Message&lt;/h1&gt;

&lt;h2 id=&quot;issue-description&quot;&gt;Issue Description&lt;/h2&gt;

&lt;p&gt;Most log messages don’t have the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; after implemented the customized
Akka Dispather.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] play.api.Play - Application started &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Dev&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;warn] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] c.z.h.HikariConfig - The initializationFailFast propery is deprecated, see initializationFailTimeout
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] c.l.p.a.v.g.G.w.s.com - list feature enabled: Vector&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;security, profile&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] c.l.p.a.v.g.ActivityApi - start the get last message
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] c.l.p.n.d.ReactiveMongoManager&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;-  &amp;lt;:&amp;gt; Connecting reactive driver&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Putting log in &lt;code class=&quot;highlighter-rouge&quot;&gt;TrackingFilter&lt;/code&gt; will print some trackable log messages, but not all：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] play.api.Play - Application started &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Dev&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3734068e-f354-4de4-a9e7-25fc6ed9a1cb] c.l.TrackingFilter -  &amp;lt;:&amp;gt; trackingId generated: 3734068e-f354-4de4-a9e7-25fc6ed9a1cb
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;warn] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] c.z.h.HikariConfig - The initializationFailFast propery is deprecated, see initializationFailTimeout
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] c.l.p.a.v.g.G.w.s.com - list feature enabled: Vector&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;security, profile&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Moreover, putting the log in &lt;code class=&quot;highlighter-rouge&quot;&gt;MDCPropagatingDispatcher&lt;/code&gt;, will see：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] play.api.Play - Application started &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Dev&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;a5a7cbab-6ee4-4dd8-b54e-64217dc7357e] c.l.TrackingFilter -  &amp;lt;:&amp;gt; trackingId generated: a5a7cbab-6ee4-4dd8-b54e-64217dc7357e
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;a5a7cbab-6ee4-4dd8-b54e-64217dc7357e] old context: null
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;a5a7cbab-6ee4-4dd8-b54e-64217dc7357e] new context: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trackingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;a5a7cbab-6ee4-4dd8-b54e-64217dc7357e&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# many log skipped  ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] old context: null
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] new context: null
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] old context: &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] new context: null&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;solution-for-tracking-id-missing&quot;&gt;Solution for Tracking Id Missing&lt;/h2&gt;

&lt;p&gt;The last log messages indicate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The customized Akka Dispatcher works, since the log contain the message from &lt;code class=&quot;highlighter-rouge&quot;&gt;MDCPropagatingDispatcher&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;The thread keeps switching, since multiple messages of &lt;code class=&quot;highlighter-rouge&quot;&gt;old / new context&lt;/code&gt; show up
in the log.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So the question of Tracking Id missing becomes
&lt;strong&gt;why &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; is not passing in MDC of different threads&lt;/strong&gt;.
In order to find out the solution, we display the thread name in each
log message:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Log format&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# &amp;lt;pattern&amp;gt;%coloredLevel [%mdc{trackingId:--}] [%thread] %logger{15} - %message%n%xException{10}&amp;lt;/pattern&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;scala-execution-context-global-80] play.api.Play - Application started &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Dev&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;006bc4df-0310-4793-a88d-923dfde227d9] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;play-dev-mode-akka.actor.default-dispatcher-2] c.l.TrackingFilter -  &amp;lt;:&amp;gt; trackingId generated: 006bc4df-0310-4793-a88d-923dfde227d9
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;006bc4df-0310-4793-a88d-923dfde227d9] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;application-akka.actor.default-dispatcher-2] - old context: null
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;006bc4df-0310-4793-a88d-923dfde227d9] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;application-akka.actor.default-dispatcher-2] - new context: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trackingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;006bc4df-0310-4793-a88d-923dfde227d9&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;warn] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;scala-execution-context-global-80] - &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'token'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'fd'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; | &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'request'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'POST /api/auth'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; | &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'clientIp'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'0:0:0:0:0:0:0:1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &amp;lt;:&amp;gt; Valid token not found&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The last two messages are the key to locating the issue, one has &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt;,
another has not, and the thread names are different：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;006bc4df-0310-4793-a88d-923dfde227d9] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;application-akka.actor.default-dispatcher-2] - new context: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trackingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;006bc4df-0....
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;warn] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;scala-execution-context-global-80] - &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'token'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'404'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; | &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'request'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'POST /api/auth'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; | &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'clientIp'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'0:0:0:0:0:0:0:1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &amp;lt;:&amp;gt; Valid token not found&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These two messages may generated by different thread objects,
one is created by &lt;code class=&quot;highlighter-rouge&quot;&gt;akka.actor.default-dispatcher&lt;/code&gt;,
another is created by some scala object related to
&lt;code class=&quot;highlighter-rouge&quot;&gt;scala.concurrent.ExecutionContext.global&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The name of &lt;code class=&quot;highlighter-rouge&quot;&gt;scala-execution-context-global-80&lt;/code&gt; reminds me that Play 2.6 encourages
developer to use Dependency Injection, not global &lt;code class=&quot;highlighter-rouge&quot;&gt;ExecutionContext.global&lt;/code&gt;&lt;sup id=&quot;fnref:_play_ec_deprected&quot;&gt;&lt;a href=&quot;#fn:_play_ec_deprected&quot; class=&quot;footnote&quot;&gt;11&lt;/a&gt;&lt;/sup&gt;. And from the thread information
of log messages, it is one step closer to the final solution.&lt;/p&gt;

&lt;h2 id=&quot;replacing-executioncontextglobal-with-injected-object&quot;&gt;Replacing ExecutionContext.global with Injected Object&lt;/h2&gt;

&lt;p&gt;Basing on the analysis above, the implicit usage of &lt;code class=&quot;highlighter-rouge&quot;&gt;ExecutionContext.global&lt;/code&gt; has
finally been found in source code, it should be replaced by injected &lt;code class=&quot;highlighter-rouge&quot;&gt;ExecutionContext&lt;/code&gt;
as the solution below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Security&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Inject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExecutionContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;membersDao&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MembersDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;userApiToken&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserApiTokenDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;enforceHttpsAction&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;EnforceHttpsAction&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ec&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concurrent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ExecutionContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And this solution works:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;debug] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;f6ab38a5-1461-44c9-a5f8-ce7764025fad] -  &amp;lt;:&amp;gt; trackingId generated: f6ab38a5-1461-44c9-a5f8-ce7764025fad
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;warn] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;f6ab38a5-1461-44c9-a5f8-ce7764025fad] - &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'token'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'404'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; | &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'request'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'POST /api/auth'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; | &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'clientIp'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'0:0:0:0:0:0:0:1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &amp;lt;:&amp;gt; Valid token not found&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;improve-of-tracking-id&quot;&gt;Improve of Tracking Id&lt;/h1&gt;

&lt;p&gt;The importance of Tracking Id is evidently. Since this post
only focus on the backend Tracking Id generating, an improve
of Tracking Id is frontend generating. The Tracking Id
will take its entire life cycle starting from the HTTP Request initialization,
going through the load balance, network, and arriving at backend side. After
the business calculation in backend server finish, the Tracking Id will be finally responsed
back to the frontend side.&lt;/p&gt;

&lt;p&gt;The system deployed with the Ngnix needs writing the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; into the
Ngnix, then the &lt;code class=&quot;highlighter-rouge&quot;&gt;condition&lt;/code&gt; conf&lt;sup id=&quot;fnref:_ngix_condition_log&quot;&gt;&lt;a href=&quot;#fn:_ngix_condition_log&quot; class=&quot;footnote&quot;&gt;12&lt;/a&gt;&lt;/sup&gt; can be used for Access Log.
Even more, the Access Log can be configured for tracking the &lt;code class=&quot;highlighter-rouge&quot;&gt;4xx&lt;/code&gt; HTTP Response only for production error.&lt;/p&gt;

&lt;p&gt;Reporting the &lt;code class=&quot;highlighter-rouge&quot;&gt;trackingId&lt;/code&gt; from frontend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;can track the access log of Nginx,&lt;/li&gt;
  &lt;li&gt;can help build the story in backend.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No need of reading and searching word by word in large log file.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:_blog_yanns_mdc_play&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://yanns.github.io/blog/2014/05/04/slf4j-mapped-diagnostic-context-mdc-with-play-framework/&quot;&gt;SLF4J Mapped Diagnostic Context (MDC) With Play Framework&lt;/a&gt; by Yann Simon, 2014&amp;nbsp;&lt;a href=&quot;#fnref:_blog_yanns_mdc_play&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_blog_yanns_mdc_play:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_github_rishabh9_issue1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/rishabh9/mdc-propagation-dispatcher/issues/1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TrackingId&lt;/code&gt; not printed as description in issue #1 of rishabh9/mdc-propagation-dispatcher&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_github_rishabh9_issue1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_github_cihub_seelog_format_ref&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/cihub/seelog/wiki/Format-reference/7eb0ebc6df74a6386165d9b4687445c6b86bac97&quot;&gt;Format Reference of cihub/seelog&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_github_cihub_seelog_format_ref&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_sf_david_bud_mdc_java_go&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/41049394&quot;&gt;&lt;em&gt;“Java MDC relies on thread local storage, Go does not have”&lt;/em&gt; by David Budworth’s reply on Stackoverflow&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_sf_david_bud_mdc_java_go&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_note_where_go_code_from&quot;&gt;
      &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;RequestContext&lt;/code&gt; originally comes from the Golang code of my colleague in Hujiang. Basing on that, I added the &lt;code class=&quot;highlighter-rouge&quot;&gt;TrackingId&lt;/code&gt; and wrote it to log.&amp;nbsp;&lt;a href=&quot;#fnref:_note_where_go_code_from&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_book_julien_foy_2014&quot;&gt;
      &lt;p&gt;Julien Richard-Foy, Play Framework Essentials, Packt Publishing 2014&amp;nbsp;&lt;a href=&quot;#fnref:_book_julien_foy_2014&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_play_di_in_24&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.playframework.com/documentation/2.4.x/ScalaDependencyInjection&quot;&gt;Runtime Dependency Injection in Play 2.4&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_play_di_in_24&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_play_di_in_26&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://playframework.com/documentation/2.6.x/Migration26#scala-controller-changes&quot;&gt;Scala Controller Changes in Play 2.6&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_play_di_in_26&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_play_http_filters&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.playframework.com/documentation/2.6.x/ScalaHttpFilters#Using-filters&quot;&gt;Using Filters in Play 2.6&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_play_http_filters&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_play_host_allowed&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.playframework.com/documentation/2.6.x/AllowedHostsFilter#Configuring-allowed-hosts&quot;&gt;Configure Allowed Hosts&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_play_host_allowed&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_play_ec_deprected&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://playframework.com/documentation/2.6.x/Migration26#play.api.libs.concurrent.Execution-is-deprecated&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;play.api.libs.concurrent.Execution&lt;/code&gt; is deprecated&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_play_ec_deprected&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:_ngix_condition_log&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_log_module.html&quot;&gt;Module ngx_http_log_module&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_ngix_condition_log&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/pattern/2017/07/18/injection-of-tracking-id-to-logback-message-with-customer-dispatcher-and-mapped-diagnostic-contexts-in-scala</link>
        <guid>https://scozv.github.io/blog/pattern/2017/07/18/injection-of-tracking-id-to-logback-message-with-customer-dispatcher-and-mapped-diagnostic-contexts-in-scala</guid>
        <pubDate>2017-07-18T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Design Test Cases Before Write Implementation If the Former Is Easier</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;If we want to map the domain according to the defined rules, and：&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;store the mapping rules in database, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;*a.com&lt;/code&gt;，&lt;/li&gt;
    &lt;li&gt;for input &lt;code class=&quot;highlighter-rouge&quot;&gt;s1.a.com&lt;/code&gt;，it can be matched by this rule, while, &lt;code class=&quot;highlighter-rouge&quot;&gt;a.com&lt;/code&gt; cannot.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;This article will introduce two implementations for this requirement, however,
in specific case, implementation detail sometimes is not as important as the test cases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#requirement&quot; id=&quot;markdown-toc-requirement&quot;&gt;Requirement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#implementations&quot; id=&quot;markdown-toc-implementations&quot;&gt;Implementations&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#internetdomainname-for-keyword-in-domain&quot; id=&quot;markdown-toc-internetdomainname-for-keyword-in-domain&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;InternetDomainName&lt;/code&gt; for Keyword in Domain&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#rebuild-the-matching-rules&quot; id=&quot;markdown-toc-rebuild-the-matching-rules&quot;&gt;Rebuild the Matching Rules&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#regex&quot; id=&quot;markdown-toc-regex&quot;&gt;Regex&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#write-test-cases-at-first&quot; id=&quot;markdown-toc-write-test-cases-at-first&quot;&gt;Write Test Cases At First&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#summary&quot; id=&quot;markdown-toc-summary&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;requirement&quot;&gt;Requirement&lt;/h1&gt;

&lt;p&gt;We have four rules for pattern match：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;a.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;       -&amp;gt; 1
a-&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;       -&amp;gt; 2
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.a.com   -&amp;gt; 3
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.a.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;     -&amp;gt; 4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The left side of arrow is the wildcard matching rule, while,
the right side is the return result when the input parameter matches
this rule.&lt;/p&gt;

&lt;p&gt;For instance, the input parameters in the left side will get
the result value in right side:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;z.a.com   -&amp;gt; 3
z.a.io    -&amp;gt; 4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;implementations&quot;&gt;Implementations&lt;/h1&gt;

&lt;p&gt;We cannot use &lt;code class=&quot;highlighter-rouge&quot;&gt;substring&lt;/code&gt; directly, since we have the wildcard in
the rules.&lt;/p&gt;

&lt;p&gt;A plain solution is using the idea of &lt;code class=&quot;highlighter-rouge&quot;&gt;substring&lt;/code&gt; after we extract
the main keyword in our parameters (such as &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; in the example above).&lt;/p&gt;

&lt;h2 id=&quot;internetdomainname-for-keyword-in-domain&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;InternetDomainName&lt;/code&gt; for Keyword in Domain&lt;/h2&gt;

&lt;p&gt;We can use &lt;code class=&quot;highlighter-rouge&quot;&gt;InternetDomainName&lt;/code&gt; &lt;sup id=&quot;fnref:_guava_int_dn&quot;&gt;&lt;a href=&quot;#fn:_guava_int_dn&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; to extract the root domain from the
parameters, then we can use the keyword (root domain) to build our matching rules
which include the wildcard.&lt;/p&gt;

&lt;p&gt;The function extracting the root domain can be defined as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getRootDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;rebuild-the-matching-rules&quot;&gt;Rebuild the Matching Rules&lt;/h2&gt;

&lt;p&gt;Now we have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4 matching rules,&lt;/li&gt;
  &lt;li&gt;the keyword (root domain) from the input.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can rebuild the matching rules containing the wildcard,
then do our comparison.&lt;/p&gt;

&lt;p&gt;The demonstration code is listed below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;function matchAndGetResult(domain) {
  var rootDomain = getRootDomain(domain)
  // rule 1
  if (db.find(`$rootDomain.*`)) return 1
  if (db.find(`$rootDomain-*`)) return 2
  if (db.find(`*.$rootDomain.com`)) return 3
  if (db.find(`*.$rootDomain.*`)) return 4
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, we may easily find the potential issue
in our implementation, just write some test cases, such as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;matchAndGetResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'z.a.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The result value of this test is &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; actually.&lt;/p&gt;

&lt;p&gt;So we fix the issue:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;function matchAndGetResult(domain) {
  var rootDomain = getRootDomain(domain)
  // rule 1
  if (db.find(`$rootDomain.*`) &amp;amp;&amp;amp; domain.startWith(`$rootDomain.`))
    return 1
  // ...
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We still have 2 cons in this implementation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;some rules need the &lt;code class=&quot;highlighter-rouge&quot;&gt;startWith&lt;/code&gt;, while, some need the &lt;code class=&quot;highlighter-rouge&quot;&gt;contains()&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;the number of &lt;code class=&quot;highlighter-rouge&quot;&gt;if-else&lt;/code&gt; will be increased with the number of matching rules.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;regex&quot;&gt;Regex&lt;/h2&gt;

&lt;p&gt;We consider the 2 cons as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;how do we match the &lt;code class=&quot;highlighter-rouge&quot;&gt;begin&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;middle&lt;/code&gt; position of string,&lt;/li&gt;
  &lt;li&gt;how do we provide the generic solution to decrease the number of &lt;code class=&quot;highlighter-rouge&quot;&gt;if-return&lt;/code&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Regex is an powerful tool to cover these 2 cons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Regex has &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;begin&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;Regex is generic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we have an alternative solution as below：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;function matchAndGetResult(domain) {
  var rootDomain = getRootDomain(domain)

  if (var dbResult = db.find(`$rootDomain.*`)) {
    // build the regex
    var regex = dbResult
      .string
      .replace('*', '[\\S]*')
      .replace('.', '\\.')

    if (/^$regex/g).test(domain) {
      return dbResult.value
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;write-test-cases-at-first&quot;&gt;Write Test Cases At First&lt;/h1&gt;

&lt;p&gt;These two solutions are not the best solutions.&lt;/p&gt;

&lt;p&gt;In this scenario, writing the test cases should be
put as the first priority.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simple I/O for Test Cases&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can write the test cases quickly after read this
requirement. The input and output can be easily figured out
even we don’t have any solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Private Function and Short Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Usually, this function should be private and the number of code lines is short.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Different Ideas from Different Programmers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is no need to argue with different solutions.
Just make sure the solution can pass all the tests.&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;p&gt;“Put Tests at First” doesn’t mean:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Put the tests at first for all the time,&lt;/li&gt;
  &lt;li&gt;No needs to follow the code style or conventions from team or community.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;“Put Tests at First” just wants to express the idea that there are
more things important than the “Put the Solution at First”:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Make the implementation correctly,&lt;/li&gt;
  &lt;li&gt;Figure out the solution quickly,&lt;/li&gt;
  &lt;li&gt;Cover the cases for further refactor,&lt;/li&gt;
  &lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:_guava_int_dn&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/google/guava/wiki/InternetDomainNameExplained&quot;&gt;Explanation of &lt;code class=&quot;highlighter-rouge&quot;&gt;InternetDomainName&lt;/code&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:_guava_int_dn&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/algo/2017/03/23/use-minimum-matched-string-and-extended-regex-for-wildcard-matching</link>
        <guid>https://scozv.github.io/blog/algo/2017/03/23/use-minimum-matched-string-and-extended-regex-for-wildcard-matching</guid>
        <pubDate>2017-03-23T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Bolero, Cumulative Update (Sep 04, 2016)</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;摘要&quot;&gt;摘要&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This article gives a short description on cumulative update of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;.
For the entire project details, please read previous post &lt;sup id=&quot;fnref:blog_bolero&quot;&gt;&lt;a href=&quot;#fn:blog_bolero&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

  &lt;p&gt;You may find the source code of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; on &lt;a href=&quot;https://github.com/scozv/bolero&quot;&gt;scozv/bolero&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#conventions-and-rules&quot; id=&quot;markdown-toc-conventions-and-rules&quot;&gt;Conventions and Rules&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#uniform-http-response&quot; id=&quot;markdown-toc-uniform-http-response&quot;&gt;Uniform HTTP Response&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#consistency-in-payload-and-response&quot; id=&quot;markdown-toc-consistency-in-payload-and-response&quot;&gt;Consistency in payload and Response&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#refactor-and-enhancement&quot; id=&quot;markdown-toc-refactor-and-enhancement&quot;&gt;Refactor and Enhancement&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#canconnectdb2&quot; id=&quot;markdown-toc-canconnectdb2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanConnectDB2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#separated-canbehierarchic&quot; id=&quot;markdown-toc-separated-canbehierarchic&quot;&gt;Separated &lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeHierarchic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#global-setting-for-action-not-found&quot; id=&quot;markdown-toc-global-setting-for-action-not-found&quot;&gt;Global Setting for &lt;code class=&quot;highlighter-rouge&quot;&gt;Action Not Found&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#improvement-of-responseok&quot; id=&quot;markdown-toc-improvement-of-responseok&quot;&gt;Improvement of &lt;code class=&quot;highlighter-rouge&quot;&gt;ResponseOk&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#clear-unused-import&quot; id=&quot;markdown-toc-clear-unused-import&quot;&gt;Clear &lt;code class=&quot;highlighter-rouge&quot;&gt;unused import&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#unsolved-issue&quot; id=&quot;markdown-toc-unsolved-issue&quot;&gt;Unsolved Issue&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#compiling-triggered-after-service-started&quot; id=&quot;markdown-toc-compiling-triggered-after-service-started&quot;&gt;Compiling Triggered After Service Started&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#test-failed-after-many-codes-changed&quot; id=&quot;markdown-toc-test-failed-after-many-codes-changed&quot;&gt;Test Failed After Many Codes Changed&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#test-db-and-development-db&quot; id=&quot;markdown-toc-test-db-and-development-db&quot;&gt;Test DB and Development DB&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;conventions-and-rules&quot;&gt;Conventions and Rules&lt;/h1&gt;

&lt;p&gt;The conventions or rules in &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; may not be the best practice:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Naming most &lt;code class=&quot;highlighter-rouge&quot;&gt;trait&lt;/code&gt; with the initial &lt;code class=&quot;highlighter-rouge&quot;&gt;Can&lt;/code&gt;, in order to state it has some sort of ability,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;interop&lt;/code&gt; directory was used for inter-operating between 3rd party API, at beginning,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_id&lt;/code&gt; means primary key, and it is &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uniform-http-response&quot;&gt;Uniform HTTP Response&lt;/h2&gt;

&lt;p&gt;All HTTP Response return uniform &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;{
  ok: Boolean,
  data: T,
  error: String
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;consistency-in-payload-and-response&quot;&gt;Consistency in payload and Response&lt;/h2&gt;

&lt;p&gt;Inspired by &lt;code class=&quot;highlighter-rouge&quot;&gt;map()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; keeps consistence between &lt;code class=&quot;highlighter-rouge&quot;&gt;payload&lt;/code&gt;
and Response data.&lt;/p&gt;

&lt;p&gt;For instance:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;PUT /transaction

// Request
// header: Token for authentication
payload: &quot;Bolero.models.Transaction&quot;

// Response
data: &quot;Bolero.models.Transaction&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Only difference is &lt;code class=&quot;highlighter-rouge&quot;&gt;_id&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;payload&lt;/code&gt; is empty, while &lt;code class=&quot;highlighter-rouge&quot;&gt;_id&lt;/code&gt; in Response
will be generated.&lt;/p&gt;

&lt;h1 id=&quot;refactor-and-enhancement&quot;&gt;Refactor and Enhancement&lt;/h1&gt;

&lt;h2 id=&quot;canconnectdb2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanConnectDB2&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanConnectDB2&lt;/code&gt; provides more generic &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt; I/O abilities with &lt;code class=&quot;highlighter-rouge&quot;&gt;implicit&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;separated-canbehierarchic&quot;&gt;Separated &lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeHierarchic&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Hierarchic&lt;/code&gt; handles the connection relationship with &lt;code class=&quot;highlighter-rouge&quot;&gt;union-find&lt;/code&gt; algorithm。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeHierarchic&lt;/code&gt; has been separated into &lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeHierarchicInstance&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeHierarchicObject&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;See:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;https://github.com/scozv/bolero/commit/ea24ab2c443a802145488b81c15e2fa7266492ae&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;global-setting-for-action-not-found&quot;&gt;Global Setting for &lt;code class=&quot;highlighter-rouge&quot;&gt;Action Not Found&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; will return &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ok:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;false,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;error:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
when &lt;code class=&quot;highlighter-rouge&quot;&gt;Action Not Found&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;https://github.com/scozv/bolero/commit/e8991bc146adeabaf5d5f713f253a2a6fa1fe950&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;improvement-of-responseok&quot;&gt;Improvement of &lt;code class=&quot;highlighter-rouge&quot;&gt;ResponseOk&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;implicit writes&lt;/code&gt;, in order to avoid
&lt;code class=&quot;highlighter-rouge&quot;&gt;Json.toJson&lt;/code&gt; manually of parameters.&lt;/p&gt;

&lt;h2 id=&quot;clear-unused-import&quot;&gt;Clear &lt;code class=&quot;highlighter-rouge&quot;&gt;unused import&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unused import&lt;/code&gt; has been cleared.&lt;/p&gt;

&lt;h1 id=&quot;unsolved-issue&quot;&gt;Unsolved Issue&lt;/h1&gt;

&lt;h2 id=&quot;compiling-triggered-after-service-started&quot;&gt;Compiling Triggered After Service Started&lt;/h2&gt;

&lt;p&gt;When &lt;code class=&quot;highlighter-rouge&quot;&gt;output&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;activator run&lt;/code&gt; or from IntelliJ IDEA) said &lt;em&gt;service has been running on &lt;code class=&quot;highlighter-rouge&quot;&gt;9000&lt;/code&gt;&lt;/em&gt;,
the refresh compile will still be invoked at the firstly API access.&lt;/p&gt;

&lt;h2 id=&quot;test-failed-after-many-codes-changed&quot;&gt;Test Failed After Many Codes Changed&lt;/h2&gt;

&lt;p&gt;When many codes have been changed, test will be failed
unless we &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; a service to trigger a refresh compile.&lt;/p&gt;

&lt;h2 id=&quot;test-db-and-development-db&quot;&gt;Test DB and Development DB&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;FakeHTTPRequest&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;WithApplication&lt;/code&gt; may use the &lt;code class=&quot;highlighter-rouge&quot;&gt;DB&lt;/code&gt; connection in &lt;code class=&quot;highlighter-rouge&quot;&gt;application.conf&lt;/code&gt;.
So that we cannot reconfigure the &lt;code class=&quot;highlighter-rouge&quot;&gt;DB&lt;/code&gt; in our test case.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:blog_bolero&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://scozv.github.io/blog/guide/2016/07/27/bolero-a-restful-scaffold-with-scala&quot;&gt;Bolero, a RESTful Scaffold with Scala, Play! and ReactiveMongo&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:blog_bolero&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/guide/2016/09/05/bolero-cumulative-update-on-sep-04-2016</link>
        <guid>https://scozv.github.io/blog/guide/2016/09/05/bolero-cumulative-update-on-sep-04-2016</guid>
        <pubDate>2016-09-05T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Scala Quick Tour Part II</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is the second part of &lt;em&gt;Scala Quick Tour&lt;/em&gt;,
in the &lt;a href=&quot;https://scozv.github.io/blog/guide/2016/08/21/scala-quick-tour-part-i&quot;&gt;previous part&lt;/a&gt;,
we talked about Functional Programming Basis, Functional Type and the Type Inference.&lt;/p&gt;

  &lt;p&gt;In this article, I will give you a precise introduction of &lt;strong&gt;Tail Recursion&lt;/strong&gt;,
which is a very important conception of Functional Programming.
After this introduction, I will explain the construction and operations of &lt;code class=&quot;highlighter-rouge&quot;&gt;List[T]&lt;/code&gt;, using
Tail Recursion.&lt;/p&gt;

  &lt;p&gt;Briefly, the part II will cover:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Iteration to Recursion,&lt;/li&gt;
    &lt;li&gt;Recursion vs Tail Recursion,&lt;/li&gt;
    &lt;li&gt;First Glance of Type Parameterization and Pattern Match,&lt;/li&gt;
    &lt;li&gt;Recursion Construction of &lt;code class=&quot;highlighter-rouge&quot;&gt;List[T]&lt;/code&gt;,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tail&lt;/code&gt;,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;take&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;reverse&lt;/code&gt;,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;append&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;prepend&lt;/code&gt;,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;foreach&lt;/code&gt;,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt;,&lt;/li&gt;
    &lt;li&gt;Read the Source of &lt;code class=&quot;highlighter-rouge&quot;&gt;List.scala&lt;/code&gt;.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;Currently, This article (Part II) is only written in Chinese.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;


</description>
        <link>https://scozv.github.io/blog/guide/2016/08/22/scala-quick-tour-part-ii</link>
        <guid>https://scozv.github.io/blog/guide/2016/08/22/scala-quick-tour-part-ii</guid>
        <pubDate>2016-08-22T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Scala Quick Tour Part I</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Three years ago, I learn the &lt;em&gt;Functional Programming Principles in Scala&lt;/em&gt; &lt;sup id=&quot;fnref:open_progfun1&quot;&gt;&lt;a href=&quot;#fn:open_progfun1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
from Coursera.org. After that I wrote &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt; and finished &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; &lt;sup id=&quot;fnref:blog_bolero&quot;&gt;&lt;a href=&quot;#fn:blog_bolero&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

  &lt;p&gt;In the serial of &lt;em&gt;Scala Quick Tour&lt;/em&gt;, I would like to give you:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Part 1, Basis, Functional Type and Type Inference&lt;/li&gt;
    &lt;li&gt;Part 2, Tail Recursion and &lt;code class=&quot;highlighter-rouge&quot;&gt;List[T]&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Part 3, OOP in &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Part 4, Pattern Match&lt;/li&gt;
    &lt;li&gt;Part 5, Collections&lt;/li&gt;
    &lt;li&gt;Part 6, Lazy Evaluation, Monad, &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Part 7, &lt;code class=&quot;highlighter-rouge&quot;&gt;Future[T]&lt;/code&gt;, For Comprehension&lt;/li&gt;
    &lt;li&gt;Part 8, Deep in &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; &lt;sup id=&quot;fnref:github_bolero&quot;&gt;&lt;a href=&quot;#fn:github_bolero&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;This article is Part I, and covers:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Basis in Functional Programming,&lt;/li&gt;
    &lt;li&gt;Two Evaluation Mode, Call By-Value and Call By-Name,&lt;/li&gt;
    &lt;li&gt;Functional Type,&lt;/li&gt;
    &lt;li&gt;Type Inference.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;Currently, This article (Part I) is only written in Chinese.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;


&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:open_progfun1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/progfun1&quot;&gt;Functional Programming Principles in Scala&lt;/a&gt; from École Polytechnique Fédérale de Lausanne&amp;nbsp;&lt;a href=&quot;#fnref:open_progfun1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:blog_bolero&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://scozv.github.io/blog/guide/2016/07/27/bolero-a-restful-scaffold-with-scala&quot;&gt;Bolero, a RESTful Scaffold with Scala, Play! and ReactiveMongo&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:blog_bolero&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:github_bolero&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/scozv/bolero&quot;&gt;Bolero, the Source Code&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:github_bolero&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/guide/2016/08/21/scala-quick-tour-part-i</link>
        <guid>https://scozv.github.io/blog/guide/2016/08/21/scala-quick-tour-part-i</guid>
        <pubDate>2016-08-21T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Bolero, a RESTful Scaffold with Scala, Play! and ReactiveMongo</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bolero is a &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Scaffold with &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ReactiveMongo&lt;/code&gt;.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; handles the HTTP Request and Response, while the &lt;code class=&quot;highlighter-rouge&quot;&gt;ReactiveMongo&lt;/code&gt;
reads and write with &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt;. This article will introduce a few ideas in Bolero, including:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Model&lt;/code&gt; naming and Jsonfying,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt; design,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CORS&lt;/code&gt; configuration,&lt;/li&gt;
    &lt;li&gt;Token based authentication,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EitherOrError&lt;/code&gt;, a Monad class for global rules,&lt;/li&gt;
    &lt;li&gt;Webhook handling,&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FakeApplication&lt;/code&gt; for HTTP Request mock,&lt;/li&gt;
    &lt;li&gt;Deploy with &lt;code class=&quot;highlighter-rouge&quot;&gt;sbt-native&lt;/code&gt;.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;You may find the source code of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; on &lt;a href=&quot;https://github.com/scozv/bolero&quot;&gt;scozv/bolero&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#principles-of-bolero&quot; id=&quot;markdown-toc-principles-of-bolero&quot;&gt;Principles of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#loose-coupling&quot; id=&quot;markdown-toc-loose-coupling&quot;&gt;Loose Coupling&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#modeling-the-name-polymorphism-and-the-json-formats&quot; id=&quot;markdown-toc-modeling-the-name-polymorphism-and-the-json-formats&quot;&gt;Modeling, the Name, Polymorphism, and the JSON Formats&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tips-on-restful-api-design&quot; id=&quot;markdown-toc-tips-on-restful-api-design&quot;&gt;Tips on &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt; Design&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#factors-in-restful-api&quot; id=&quot;markdown-toc-factors-in-restful-api&quot;&gt;Factors in &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#consistency-in-payload-and-response&quot; id=&quot;markdown-toc-consistency-in-payload-and-response&quot;&gt;Consistency in payload and Response&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#be-cors-or-not&quot; id=&quot;markdown-toc-be-cors-or-not&quot;&gt;Be CORS or NOT&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#uri-the-plurals-and-the-order&quot; id=&quot;markdown-toc-uri-the-plurals-and-the-order&quot;&gt;URI, the Plurals, and the Order&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#details-in-codes&quot; id=&quot;markdown-toc-details-in-codes&quot;&gt;Details in Codes&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ability-of-model&quot; id=&quot;markdown-toc-ability-of-model&quot;&gt;Ability of Model&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#canbehierarchic-building-the-hierarchical-models&quot; id=&quot;markdown-toc-canbehierarchic-building-the-hierarchical-models&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeHierarchic&lt;/code&gt;, building the hierarchical model(s)&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#canbejsonfied-reading-and-writing-json&quot; id=&quot;markdown-toc-canbejsonfied-reading-and-writing-json&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeJsonfied&lt;/code&gt;, reading and writing &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#canbemasked-removing-the-sensitive-data&quot; id=&quot;markdown-toc-canbemasked-removing-the-sensitive-data&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeMasked&lt;/code&gt;, removing the sensitive data&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#orderorerror-a-monad-pattern-for-global-validation&quot; id=&quot;markdown-toc-orderorerror-a-monad-pattern-for-global-validation&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OrderOrError&lt;/code&gt;, a Monad Pattern for Global Validation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cancrossorigin-handling-the-option-request&quot; id=&quot;markdown-toc-cancrossorigin-handling-the-option-request&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanCrossOrigin&lt;/code&gt;, handling the &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTION&lt;/code&gt; Request&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#canconnectdb2t-making-code-easy-to-io-mongodb&quot; id=&quot;markdown-toc-canconnectdb2t-making-code-easy-to-io-mongodb&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanConnectDB2[T]&lt;/code&gt;, making code easy to I/O &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#token-based-authentication&quot; id=&quot;markdown-toc-token-based-authentication&quot;&gt;Token Based Authentication&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-refactor-and-ci&quot; id=&quot;markdown-toc-test-refactor-and-ci&quot;&gt;Test, Refactor and CI&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#the-structure-of-test&quot; id=&quot;markdown-toc-the-structure-of-test&quot;&gt;The Structure of Test&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#begin-and-end-of-test&quot; id=&quot;markdown-toc-begin-and-end-of-test&quot;&gt;Begin and End of Test&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#canfakehttp-http-request-mocking&quot; id=&quot;markdown-toc-canfakehttp-http-request-mocking&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanFakeHTTP&lt;/code&gt;, HTTP Request Mocking&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#deployment&quot; id=&quot;markdown-toc-deployment&quot;&gt;Deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;principles-of-bolero&quot;&gt;Principles of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;I will introduce a &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server code scaffold named &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;.
The source code of it can be checked in &lt;a href=&quot;https://github.com/scozv/bolero&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s look at the principles of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;loose-coupling&quot;&gt;Loose Coupling&lt;/h2&gt;

&lt;p&gt;Loose Coupling is a very important idea of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;, I develop and deploy the
View (web page) and &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server individually:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; only provides the &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server, the view engine of &lt;code class=&quot;highlighter-rouge&quot;&gt;Play !&lt;/code&gt; is
not used in &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;. I am planning to replace &lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;Spary.io&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;As the &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server, &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; ensures that all data returned is &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; format.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can apply &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; for multiple &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server, however, &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; is NOT
a Microservices Framework. Currently, the &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt; version of &lt;code class=&quot;highlighter-rouge&quot;&gt;Lagom&lt;/code&gt; Framework
provided by Lightbend
is under development [^lagom_issue1].&lt;/p&gt;

&lt;h2 id=&quot;modeling-the-name-polymorphism-and-the-json-formats&quot;&gt;Modeling, the Name, Polymorphism, and the JSON Formats&lt;/h2&gt;

&lt;p&gt;Data (&lt;code class=&quot;highlighter-rouge&quot;&gt;models&lt;/code&gt;) has two paths of transferring in &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;One path is that HTTP Request sends
data contained in &lt;code class=&quot;highlighter-rouge&quot;&gt;payload&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;models&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt;,
and finally persists the data into &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another path is from &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;models&lt;/code&gt;, and then to &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; in web page.&lt;/p&gt;

&lt;p&gt;So we need to build the model in 3 places:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; model in web page, &lt;code class=&quot;highlighter-rouge&quot;&gt;TypeScript&lt;/code&gt; is recommanded for &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; modeling,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt; model in &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server, &lt;code class=&quot;highlighter-rouge&quot;&gt;trait&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;case&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; model in &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to keep consistency in 3 places, the naming convention is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_id&lt;/code&gt; is used for all primary fields,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NameOfModel&lt;/code&gt; is camel-casing, with initial letter Uppercase,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;propertyOfModel&lt;/code&gt; is camel-casing, with initial letter lowercase.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Attentions:&lt;/p&gt;

  &lt;p&gt;The naming conventions above is not a best practice.
And, I am considering to convert the camel-case to underline_case in &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt;.
Considering means just-considering, NOT decided-yet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; provides &lt;code class=&quot;highlighter-rouge&quot;&gt;Reads&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Writes&lt;/code&gt; &lt;sup id=&quot;fnref:play_json&quot;&gt;&lt;a href=&quot;#fn:play_json&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; for
&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; serialization and deserialization:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It &lt;code class=&quot;highlighter-rouge&quot;&gt;Writes&lt;/code&gt; code model to &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt;, while,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Reads&lt;/code&gt; data as strong-typed model from &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, &lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; contains &lt;code class=&quot;highlighter-rouge&quot;&gt;Formats&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; automated mapping &lt;sup id=&quot;fnref:play_json_auto&quot;&gt;&lt;a href=&quot;#fn:play_json_auto&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;play.api.libs.json._&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoReads&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoWrites&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// format = reads + writes
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoFormat&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tips:&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; provides automated mapping, however, using &lt;code class=&quot;highlighter-rouge&quot;&gt;Reads&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Writes&lt;/code&gt;
is recommanded, especially for complex &lt;code class=&quot;highlighter-rouge&quot;&gt;models&lt;/code&gt;, assuming we have the
high percentage of APIs test coverage.&lt;/p&gt;

  &lt;p&gt;The reason of NOT using &lt;code class=&quot;highlighter-rouge&quot;&gt;Formats[T]&lt;/code&gt; is:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;
      &lt;p&gt;When any changes happen in any places, we have to update the code of &lt;code class=&quot;highlighter-rouge&quot;&gt;Reads&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Writes&lt;/code&gt;,
otherwise, an error will be thrown:&lt;/p&gt;

      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; play.api.libs.json.JsResultException: &quot;obj.field_name&quot;:{&quot;msg&quot;:[&quot;error.path.missing&quot;]
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; formatting will be more flexible, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;Writing&lt;/code&gt; empty when &lt;code class=&quot;highlighter-rouge&quot;&gt;Option[T]&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;,&lt;/li&gt;
    &lt;li&gt;We can use different naming conventions in different places.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Polymorphism is the core idea of OOP, when using the &lt;code class=&quot;highlighter-rouge&quot;&gt;Reads&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Writes&lt;/code&gt;,
we may encounter the compile error saying:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;ambiguous&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reference&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overloaded&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;definition&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That means code has the conflict overrides,
if you have the same issue,
please read the source code of &lt;a href=&quot;(https://github.com/scozv/bolero)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;&lt;/a&gt;,
or drop me a message.&lt;/p&gt;

&lt;h2 id=&quot;tips-on-restful-api-design&quot;&gt;Tips on &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt; Design&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; only provides the &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server returning the &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; data,
will NOT provide the View page.&lt;/p&gt;

&lt;h3 id=&quot;factors-in-restful-api&quot;&gt;Factors in &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Generally, factors below should be considered during the &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt; design:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP Method, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt;, etc &lt;sup id=&quot;fnref:rest_http_method&quot;&gt;&lt;a href=&quot;#fn:rest_http_method&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;URI&lt;/code&gt;, like &lt;code class=&quot;highlighter-rouge&quot;&gt;/user/:id/profile&lt;/code&gt;, parameters can be used for sorting, pagination or filtering,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;payload&lt;/code&gt; data that is usually used in &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt;, it will be transferred to &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server from Client side,&lt;/li&gt;
  &lt;li&gt;HTTP Header, metadata of HTTP Request, we can add authentication token in Header,&lt;/li&gt;
  &lt;li&gt;HTTP Response data, the returning value of &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;consistency-in-payload-and-response&quot;&gt;Consistency in payload and Response&lt;/h3&gt;

&lt;p&gt;Consistency is not a new idea, especially, when you
are familier with &lt;code class=&quot;highlighter-rouge&quot;&gt;map()&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// such as
&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;According to this consistency principle,
the data structure of HTTP Response data is same as
the data structure of &lt;code class=&quot;highlighter-rouge&quot;&gt;payload&lt;/code&gt; in Request:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;POST /checkout

// Request
// header: Token for authentication
payload: &quot;Bolero.models.Order&quot;

// Response
data: &quot;Bolero.models.Order&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Consistency principle of Request and Response
makes the API easy to remember and invoke.&lt;/p&gt;

&lt;h3 id=&quot;be-cors-or-not&quot;&gt;Be CORS or NOT&lt;/h3&gt;

&lt;p&gt;CORS stands for Cross Origin Resource Sharing &lt;sup id=&quot;fnref:mdn_cors&quot;&gt;&lt;a href=&quot;#fn:mdn_cors&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;At the very beginning of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;, I restricted the
access origin of &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt;, and I allowed only one
specific client (web page server) to access the &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server.&lt;/p&gt;

&lt;p&gt;However, restricting of access origin is helpless for a &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server,
especially, when we need to interact with 3rd party Server.
For instance, the &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; Server receives the Webhook from Ping++ payment server,
which is a &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; request actually, so that it need to open its access origin.&lt;/p&gt;

&lt;p&gt;Attention, &lt;code class=&quot;highlighter-rouge&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt; doesn’t support
the so-called &lt;em&gt;multipal origin&lt;/em&gt; &lt;sup id=&quot;fnref:w3_cors_multi_issue&quot;&gt;&lt;a href=&quot;#fn:w3_cors_multi_issue&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;,
we need to open our access origin widely (&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In practice the &lt;code class=&quot;highlighter-rouge&quot;&gt;origin-list-or-null&lt;/code&gt; production is more constrained.
Rather than allowing a space-separated list of origins,
&lt;strong&gt;it is either a single origin or the string “null”&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, restriction of access origin is NOT appropriate
under Loose Coupling principle and multiple instance deployment.&lt;/p&gt;

&lt;p&gt;And, If we need the access origin control, or to monitor the
HTTP Request, we can:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;use &lt;code class=&quot;highlighter-rouge&quot;&gt;Filters&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; &lt;sup id=&quot;fnref:play_filter&quot;&gt;&lt;a href=&quot;#fn:play_filter&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;,&lt;/li&gt;
  &lt;li&gt;use &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt; of HTTP Request to restrict origin source,&lt;/li&gt;
  &lt;li&gt;limit the abnormal high frequency sending of HTTP Request in client side.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;uri-the-plurals-and-the-order&quot;&gt;URI, the Plurals, and the Order&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; has the naming conventions of &lt;code class=&quot;highlighter-rouge&quot;&gt;URI&lt;/code&gt; below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;using simple nouns in &lt;code class=&quot;highlighter-rouge&quot;&gt;URI&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;NOT using any symbol except the &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;NOT using camel-case,&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;using ONLY singular form of nouns in &lt;code class=&quot;highlighter-rouge&quot;&gt;URI&lt;/code&gt;, even the Response data is &lt;code class=&quot;highlighter-rouge&quot;&gt;List&lt;/code&gt;:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// get the list of user
GET /user
// get a user with specific id
GET /user/:id
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;If we treat a user as a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;:id&lt;/code&gt;, we also treat the &lt;code class=&quot;highlighter-rouge&quot;&gt;List[user]&lt;/code&gt; as the folder
named &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;, when we need a file, or need to access the entire folder, we will also access
the path named &lt;code class=&quot;highlighter-rouge&quot;&gt;/user&lt;/code&gt;. We don’t use path &lt;code class=&quot;highlighter-rouge&quot;&gt;/user&lt;/code&gt; for a single user,
and use path &lt;code class=&quot;highlighter-rouge&quot;&gt;/users&lt;/code&gt; for a gourp of user at same time,&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;the sorting rules of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;’s HTTP Response data:
    &lt;ul&gt;
      &lt;li&gt;returning sorted data if HTTP Request has the specific sorting rule,&lt;/li&gt;
      &lt;li&gt;returning sorted data if the biz requirement needs,&lt;/li&gt;
      &lt;li&gt;otherwise, &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; will not ensure the order of list.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;details-in-codes&quot;&gt;Details in Codes&lt;/h1&gt;

&lt;p&gt;The source code of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; is hosted as open source
in &lt;a href=&quot;https://github.com/scozv/bolero&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The brief structure of &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; code is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;.
├── app
|   ├── base                // utils &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;
|   ├── biz                 // business implement, ONLY access MongoDB here
|   ├── contollers          // controll of MVC
|   └── models              
|       ├── interop         // models used &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;interact with 3rd party API
|       └── model.scala     // modeling data &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Scala
|
├── conf                    // Play! configuration
|   ├── application.conf
|   ├── play.plugins
|   ├── release.conf
|   └── routes
|
├── project                  // project configuration
|   ├── build.properties
|   └── plugin.sbt
|
├── &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;                     // &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
└── build.sbt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ability-of-model&quot;&gt;Ability of Model&lt;/h2&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;trait&lt;/code&gt; means an ability,
&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; names &lt;code class=&quot;highlighter-rouge&quot;&gt;trait&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;CanHaveSpecificAbility&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;canbehierarchic-building-the-hierarchical-models&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeHierarchic&lt;/code&gt;, building the hierarchical model(s)&lt;/h3&gt;

&lt;p&gt;Hierarchical model(s) is (are) conntected with each other.
We can use &lt;code class=&quot;highlighter-rouge&quot;&gt;union-find&lt;/code&gt; to maintain the relationship:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;rootId&lt;/code&gt; of root object is its own &lt;code class=&quot;highlighter-rouge&quot;&gt;_id&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;for any two instances, if they have the same &lt;code class=&quot;highlighter-rouge&quot;&gt;rootId&lt;/code&gt;, they are connected.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;canbejsonfied-reading-and-writing-json&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeJsonfied&lt;/code&gt;, reading and writing &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Please read the source code of &lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeJsonfied&lt;/code&gt; &lt;sup id=&quot;fnref:scozv_git_goods&quot;&gt;&lt;a href=&quot;#fn:scozv_git_goods&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;canbemasked-removing-the-sensitive-data&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanBeMasked&lt;/code&gt;, removing the sensitive data&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; will put a mask on the sensitive data, such as
underlying unique &lt;code class=&quot;highlighter-rouge&quot;&gt;_id&lt;/code&gt;, cost of a product.&lt;/p&gt;

&lt;p&gt;Then, using &lt;code class=&quot;highlighter-rouge&quot;&gt;T.asMasked()&lt;/code&gt; will be remove the sensitive data.&lt;/p&gt;

&lt;p&gt;Naming as &lt;code class=&quot;highlighter-rouge&quot;&gt;Mask&lt;/code&gt;, is inspired from Oracle Data Masking &lt;sup id=&quot;fnref:oracle_mask&quot;&gt;&lt;a href=&quot;#fn:oracle_mask&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;orderorerror-a-monad-pattern-for-global-validation&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OrderOrError&lt;/code&gt;, a Monad Pattern for Global Validation&lt;/h2&gt;

&lt;p&gt;Before creating an &lt;code class=&quot;highlighter-rouge&quot;&gt;Order&lt;/code&gt;, we need validate a serial of rules on this &lt;code class=&quot;highlighter-rouge&quot;&gt;Order&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;does the user have the privilege of creating order,&lt;/li&gt;
  &lt;li&gt;is there enough inventory for this order,&lt;/li&gt;
  &lt;li&gt;is price valid,&lt;/li&gt;
  &lt;li&gt;is the coupon of order valid,&lt;/li&gt;
  &lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; provides a Monad Pattern named &lt;code class=&quot;highlighter-rouge&quot;&gt;OrderOrError&lt;/code&gt;,
it accepts an &lt;code class=&quot;highlighter-rouge&quot;&gt;OrderOrError&lt;/code&gt;, and will&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;return &lt;code class=&quot;highlighter-rouge&quot;&gt;Order&lt;/code&gt;, if previous order valid, otherwise,&lt;/li&gt;
  &lt;li&gt;return &lt;code class=&quot;highlighter-rouge&quot;&gt;Error&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learning from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Try&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt; &lt;sup id=&quot;fnref:scala_try&quot;&gt;&lt;a href=&quot;#fn:scala_try&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt; , I designed
&lt;code class=&quot;highlighter-rouge&quot;&gt;OrderOrError&lt;/code&gt; as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;OrderOrError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Order&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genericValidation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Order&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;OrderOrError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*
  * we connect DB and validate the order,
  * so a Future[T] will be returned
  * */&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genericRule&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;OrderOrError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExecutionContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;OrderOrError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;successful&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genericValidation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Attention:&lt;/p&gt;

  &lt;p&gt;Strictly speaking, &lt;code class=&quot;highlighter-rouge&quot;&gt;OrderOrError&lt;/code&gt; above is not a Monad.
Two primary methods haven’t been implemented &lt;sup id=&quot;fnref:scozv_bolero_issue1&quot;&gt;&lt;a href=&quot;#fn:scozv_bolero_issue1&quot; class=&quot;footnote&quot;&gt;10&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ModelOrError[A].map(A =&amp;gt; B): ModelOrError[B]
  ModelOrError[A].flatMap(A =&amp;gt; ModelOrError[B]): ModelOrError[B]
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;cancrossorigin-handling-the-option-request&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanCrossOrigin&lt;/code&gt;, handling the &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTION&lt;/code&gt; Request&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OPTION&lt;/code&gt; Request is used for &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; of CORS, we need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;define the &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTION&lt;/code&gt; router, and,&lt;/li&gt;
  &lt;li&gt;return &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP 200&lt;/code&gt; after accepting the &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTION&lt;/code&gt; Request.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// routes
// OPTIONS       /*path        controllers.CORSController.preFlight(path)
// controllers
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CORSController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Controller&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CanCrossOrigin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;preFlight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;corsOPTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// CanCrossOrigin
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CanCrossOrigin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corsOPTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// add Access-Control-Allow-Origin to header
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;canconnectdb2t-making-code-easy-to-io-mongodb&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanConnectDB2[T]&lt;/code&gt;, making code easy to I/O &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanConnectDB2[T]&lt;/code&gt; will replace the original &lt;code class=&quot;highlighter-rouge&quot;&gt;CanConnectDB&lt;/code&gt; soon.
It will make code easy to read and write &lt;code class=&quot;highlighter-rouge&quot;&gt;MongoDB&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The code changes
could be found at
&lt;a href=&quot;https://github.com/scozv/bolero/commit/b0a5fd3c3ab58159305711e6e0f742786fccc30b&quot;&gt;git diff&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Currently, methods below are provided:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CanConnectDB2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Lists all T
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Quereis one T with specific _id
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Gets the value of specific field of one T
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Lists the specific field values
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JsObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Inserts one T
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;WriteResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Updates T(s) when selector holds
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JsObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UpdateWriteResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Edits one T with specific _id
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UpdateWriteResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;token-based-authentication&quot;&gt;Token Based Authentication&lt;/h2&gt;

&lt;p&gt;All &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; API are stateless in &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt;.
Token based authentication can be used for
user identification. A post &lt;sup id=&quot;fnref:auth0_token&quot;&gt;&lt;a href=&quot;#fn:auth0_token&quot; class=&quot;footnote&quot;&gt;11&lt;/a&gt;&lt;/sup&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;auth0&lt;/code&gt;
is recommanded.&lt;/p&gt;

&lt;p&gt;Also, I am writing a post on token authentication,
the source code of this draft is in github &lt;sup id=&quot;fnref:scozv_blog_auth_token&quot;&gt;&lt;a href=&quot;#fn:scozv_blog_auth_token&quot; class=&quot;footnote&quot;&gt;12&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Attention:&lt;/p&gt;

  &lt;p&gt;I am not a expert on Web Security.
&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; cannot ensure the 100% security of authentication.
I am still improving it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Currently, &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; uses Action composition &lt;sup id=&quot;fnref:play_composition&quot;&gt;&lt;a href=&quot;#fn:play_composition&quot; class=&quot;footnote&quot;&gt;13&lt;/a&gt;&lt;/sup&gt;
for authentication.
You can read the source code of &lt;code class=&quot;highlighter-rouge&quot;&gt;controllers.CanAuthenticate.scala&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;test-refactor-and-ci&quot;&gt;Test, Refactor and CI&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Test is very important &lt;sup id=&quot;fnref:scozv_blog_jira&quot;&gt;&lt;a href=&quot;#fn:scozv_blog_jira&quot; class=&quot;footnote&quot;&gt;14&lt;/a&gt;&lt;/sup&gt;, it is key to Refactor and CI.&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Test is very important, it is key to Refactor and CI.&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Test is very important, it is key to Refactor and CI.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The source code of &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;
is located in &lt;a href=&quot;https://github.com/scozv/bolero/tree/master/test&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt;

&lt;h2 id=&quot;the-structure-of-test&quot;&gt;The Structure of Test&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;.
├── &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
|   |                               // still use previous release file,
|   ├── WithApplication.scala       //   instead of WithApplication from Play! 2.4
|   ├── CanConnectDB.scala          // connect to &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;database
|   ├── CanFakeHTTP.scala           // fake HTTP Request
|   └── BoleroApplicationSpec.scala // &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;files, can be separated&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;begin-and-end-of-test&quot;&gt;Begin and End of Test&lt;/h2&gt;

&lt;p&gt;In order to keep independency of database,
&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; will prepare data before test, and clean up data after test.&lt;/p&gt;

&lt;h2 id=&quot;canfakehttp-http-request-mocking&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CanFakeHTTP&lt;/code&gt;, HTTP Request Mocking&lt;/h2&gt;

&lt;p&gt;Based on the Loose Coupling principle,
the development process of &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful&lt;/code&gt; Server
should be independent with the development process
of web page. So that &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; use &lt;code class=&quot;highlighter-rouge&quot;&gt;CanFakeHTTP&lt;/code&gt;
to mock the HTTP Request.&lt;/p&gt;

&lt;h1 id=&quot;deployment&quot;&gt;Deployment&lt;/h1&gt;

&lt;p&gt;I use &lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; and host the project on &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 14.04&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For deployment, you can read the &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy.sh&lt;/code&gt;, which uses
&lt;code class=&quot;highlighter-rouge&quot;&gt;sbt-native-packager&lt;/code&gt; &lt;sup id=&quot;fnref:scala_sbt_native&quot;&gt;&lt;a href=&quot;#fn:scala_sbt_native&quot; class=&quot;footnote&quot;&gt;15&lt;/a&gt;&lt;/sup&gt; for packaging.&lt;/p&gt;

&lt;p&gt;DO NOT host the deployment script or
production configuration in development code.&lt;/p&gt;

&lt;p&gt;Supposing we have a huge project (codename: PJ), and we separate
this project into different code repositories:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pj-docs                 &lt;span class=&quot;c&quot;&gt;# documentation center, using Markdown&lt;/span&gt;
pj-core-restful         &lt;span class=&quot;c&quot;&gt;# this is where the Bolero use&lt;/span&gt;
pj-core-web             &lt;span class=&quot;c&quot;&gt;# Web models, using TypeScript&lt;/span&gt;
pj-client-web           &lt;span class=&quot;c&quot;&gt;# View, the user interface, using `pj-core-web`&lt;/span&gt;
pj-client-device        &lt;span class=&quot;c&quot;&gt;# View, application&lt;/span&gt;
pj-client-console       &lt;span class=&quot;c&quot;&gt;# View, core management system, still using `pj-core-web`&lt;/span&gt;
pj-deploy               &lt;span class=&quot;c&quot;&gt;# deploy configuration, NOT open to developers&lt;/span&gt;
pj-data                 &lt;span class=&quot;c&quot;&gt;# production data backup, NOT open to developers&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:play_json&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.playframework.com/documentation/2.5.x/ScalaJsonCombinators&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; JSON Reads/Writes/Format Combinators&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:play_json&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:play_json_auto&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.playframework.com/documentation/2.5.x/ScalaJsonAutomated&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; JSON automated mapping&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:play_json_auto&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:rest_http_method&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.restapitutorial.com/lessons/httpmethods.html&quot;&gt;Using HTTP Methods for RESTful Services&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:rest_http_method&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:mdn_cors&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;HTTP access control (CORS)&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:mdn_cors&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:w3_cors_multi_issue&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.w3.org/TR/cors/#access-control-allow-origin-response-header&quot;&gt;5.1 Access-Control-Allow-Origin Response Header&lt;/a&gt; from w3.org&amp;nbsp;&lt;a href=&quot;#fnref:w3_cors_multi_issue&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:play_filter&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.playframework.com/documentation/2.5.x/ScalaHttpFilters&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; Filters&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:play_filter&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scozv_git_goods&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/scozv/bolero/blob/master/app/models/Goods.scala#L28&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;models.Goods&lt;/code&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:scozv_git_goods&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:oracle_mask&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/database/options/data-masking-subsetting/overview/index.html&quot;&gt;Oracle Data Masking and Subsetting Pack&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:oracle_mask&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scala_try&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.scala-lang.org/api/2.9.3/scala/util/Try.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scala.util.Try&lt;/code&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:scala_try&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scozv_bolero_issue1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/scozv/bolero/issues/1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bolero&lt;/code&gt; issue #1 monad ModelOrError needed&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:scozv_bolero_issue1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:auth0_token&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://auth0.com/blog/2014/01/07/angularjs-authentication-with-cookies-vs-token/&quot;&gt;Cookies vs Tokens. Getting auth right with Angular.JS&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:auth0_token&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scozv_blog_auth_token&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/scozv/blog/blob/master/_drafts/2016-05-12-understanding-of-login-and-the-token-based-authentication.md&quot;&gt;Understanding of Token Authentication (Draft, in Chinese)&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:scozv_blog_auth_token&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:play_composition&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.playframework.com/documentation/2.5.x/ScalaActionsComposition&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Play!&lt;/code&gt; Action composition&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:play_composition&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scozv_blog_jira&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://scozv.github.io/blog/guide/2016/04/05/fully-migrating-from-bitbucket-cloud-issue-system-to-jira-server&quot;&gt;Fully Migrating from Bitbucket Cloud Issue System to JIRA Server&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:scozv_blog_jira&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scala_sbt_native&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;[^scala_sbt_native]&quot;&gt;Debian Plugin&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:scala_sbt_native&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/guide/2016/07/27/bolero-a-restful-scaffold-with-scala</link>
        <guid>https://scozv.github.io/blog/guide/2016/07/27/bolero-a-restful-scaffold-with-scala</guid>
        <pubDate>2016-07-27T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>DO NOT Prepare the Development Environment by Click and Click</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This article will give you an &lt;code class=&quot;highlighter-rouge&quot;&gt;installation.sh&lt;/code&gt; script, that
can be used to prepare the development environment. Instead of click and click,
we just simply run this command in bash：&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  wget -qO- path/to/installation.sh | bash
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;

  &lt;p&gt;This article will describe the process of &lt;code class=&quot;highlighter-rouge&quot;&gt;installation.sh&lt;/code&gt;, besides, I want to express:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Use code, not mouse,&lt;/li&gt;
    &lt;li&gt;Use git, when we use code,&lt;/li&gt;
    &lt;li&gt;Bring the wonderful Development Experience to developers.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;installation.sh&lt;/code&gt; will only apply for &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 14.04+&lt;/code&gt;.&lt;/p&gt;

  &lt;p&gt;And, the article will mention &lt;code class=&quot;highlighter-rouge&quot;&gt;dotfiles&lt;/code&gt; &lt;sup id=&quot;fnref:dotfiles&quot;&gt;&lt;a href=&quot;#fn:dotfiles&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, but will not cover the details of it。&lt;/p&gt;

  &lt;p&gt;This article is mainly written in Chinese, you may read the source code &lt;sup id=&quot;fnref:scozv_dotfiles&quot;&gt;&lt;a href=&quot;#fn:scozv_dotfiles&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; for help.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#installationsh&quot; id=&quot;markdown-toc-installationsh&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;installation.sh&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bash-scripts-the-basis-of-ci&quot; id=&quot;markdown-toc-bash-scripts-the-basis-of-ci&quot;&gt;Bash Scripts, the Basis of CI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;installationsh&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;installation.sh&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;Read the source of &lt;code class=&quot;highlighter-rouge&quot;&gt;installation.sh&lt;/code&gt;（&lt;a href=&quot;https://github.com/scozv/dotfiles/blob/master/os/ubuntu-server.sh&quot;&gt;Link&lt;/a&gt;）。
Or have a try on the VM：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget -qO- https://raw.githubusercontent.com/scozv/dotfiles/master/os/ubuntu-server.sh | bash&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Attentions&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run this script on &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 14.04+&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;Run this script on VM, NOT on your own development environment,&lt;/li&gt;
  &lt;li&gt;Read the source before running any unknown &lt;code class=&quot;highlighter-rouge&quot;&gt;sh&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;bash-scripts-the-basis-of-ci&quot;&gt;Bash Scripts, the Basis of CI&lt;/h1&gt;

&lt;p&gt;Usually, the CI configuration includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Environment preparing&lt;/li&gt;
  &lt;li&gt;Tests that will run&lt;/li&gt;
  &lt;li&gt;Any release&lt;/li&gt;
  &lt;li&gt;Clean&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The 1st step is what the &lt;code class=&quot;highlighter-rouge&quot;&gt;installation.sh&lt;/code&gt; will do.&lt;/p&gt;

&lt;p&gt;I almost write script (code) as many places any I could:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This blog site &lt;sup id=&quot;fnref:scozv_blog&quot;&gt;&lt;a href=&quot;#fn:scozv_blog&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
  &lt;li&gt;dotfiles &lt;sup id=&quot;fnref:scozv_dotfiles:1&quot;&gt;&lt;a href=&quot;#fn:scozv_dotfiles&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
  &lt;li&gt;Notes（LaTeX）&lt;/li&gt;
  &lt;li&gt;Deployment script&lt;/li&gt;
  &lt;li&gt;API documents &lt;sup id=&quot;fnref:algo-wiki&quot;&gt;&lt;a href=&quot;#fn:algo-wiki&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
  &lt;li&gt;Internal documents&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:dotfiles&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://dotfiles.github.io/&quot;&gt;Your unofficial guide to dotfiles on GitHub&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:dotfiles&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scozv_dotfiles&quot;&gt;
      &lt;p&gt;https://github.com/scozv/dotfiles&amp;nbsp;&lt;a href=&quot;#fnref:scozv_dotfiles&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:scozv_dotfiles:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scozv_blog&quot;&gt;
      &lt;p&gt;https://github.com/scozv/blog&amp;nbsp;&lt;a href=&quot;#fnref:scozv_blog&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:algo-wiki&quot;&gt;
      &lt;p&gt;https://github.com/scozv/algo-wiki&amp;nbsp;&lt;a href=&quot;#fnref:algo-wiki&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/pattern/2016/07/22/donot-ask-the-devs-to-prepare-env-by-click</link>
        <guid>https://scozv.github.io/blog/pattern/2016/07/22/donot-ask-the-devs-to-prepare-env-by-click</guid>
        <pubDate>2016-07-22T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Design a Cashier Microservice with Ping++ SDK</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ping++ &lt;sup id=&quot;fnref:pingpp&quot;&gt;&lt;a href=&quot;#fn:pingpp&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; provides a facade implementation for multiple payments.
Usually, each application we create needs a corresponding Ping++ application.&lt;/p&gt;

  &lt;p&gt;In this article, I try to design a cashier microservice where only one
Ping++ application is needed.&lt;/p&gt;

  &lt;p&gt;This article is mainly written in Chinese.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#term&quot; id=&quot;markdown-toc-term&quot;&gt;Term&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#application&quot; id=&quot;markdown-toc-application&quot;&gt;Application&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#view-layer&quot; id=&quot;markdown-toc-view-layer&quot;&gt;View layer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#restful-server-layer&quot; id=&quot;markdown-toc-restful-server-layer&quot;&gt;RESTful Server layer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ping-application&quot; id=&quot;markdown-toc-ping-application&quot;&gt;Ping++ Application&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cashier&quot; id=&quot;markdown-toc-cashier&quot;&gt;Cashier&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#design&quot; id=&quot;markdown-toc-design&quot;&gt;Design&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#general-payment-process-with-ping-&quot; id=&quot;markdown-toc-general-payment-process-with-ping-&quot;&gt;General Payment Process with Ping++ &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#decompressing-one-restful-server-into-multiple-services&quot; id=&quot;markdown-toc-decompressing-one-restful-server-into-multiple-services&quot;&gt;Decompressing One &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful Server&lt;/code&gt; into Multiple Services&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cashier-microservice-design&quot; id=&quot;markdown-toc-cashier-microservice-design&quot;&gt;Cashier Microservice Design&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#restful-api-of-cashier-microservice&quot; id=&quot;markdown-toc-restful-api-of-cashier-microservice&quot;&gt;RESTful API of Cashier Microservice&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;term&quot;&gt;Term&lt;/h1&gt;

&lt;h2 id=&quot;application&quot;&gt;Application&lt;/h2&gt;

&lt;p&gt;Application is an abstract word, it can be a tiny calculation executable, or
a huge system, such as personal finance management system.&lt;/p&gt;

&lt;p&gt;Application has different representation, like a &lt;code class=&quot;highlighter-rouge&quot;&gt;.exe&lt;/code&gt; file, a Website or an
App installed in smart devices.&lt;/p&gt;

&lt;p&gt;In this article, the term &lt;strong&gt;Application&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;is a system with a complete workflow,&lt;/li&gt;
  &lt;li&gt;has a &lt;code class=&quot;highlighter-rouge&quot;&gt;View&lt;/code&gt; as the user interface,&lt;/li&gt;
  &lt;li&gt;has a &lt;code class=&quot;highlighter-rouge&quot;&gt;Server&lt;/code&gt; layer,
＊is independent from each other Application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;view-layer&quot;&gt;View layer&lt;/h2&gt;

&lt;p&gt;I suggest to separate the &lt;code class=&quot;highlighter-rouge&quot;&gt;View&lt;/code&gt; layer from the business server.&lt;/p&gt;

&lt;p&gt;Here, the &lt;code class=&quot;highlighter-rouge&quot;&gt;View&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;accepts the user’s interaction,&lt;/li&gt;
  &lt;li&gt;sometimes, it is also called Client side.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;restful-server-layer&quot;&gt;RESTful Server layer&lt;/h2&gt;

&lt;p&gt;I suggest that all business servers are represented as &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful API&lt;/code&gt;,
in this article, the terms below are all equivalent:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Server side,&lt;/li&gt;
  &lt;li&gt;RESTful Server&lt;/li&gt;
  &lt;li&gt;Backend server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ping-application&quot;&gt;Ping++ Application&lt;/h2&gt;

&lt;p&gt;In Ping++ console page, developer can create one or more &lt;strong&gt;Ping++ Application&lt;/strong&gt;.
Each Ping++ application has a unique &lt;code class=&quot;highlighter-rouge&quot;&gt;app_id&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;cashier&quot;&gt;Cashier&lt;/h2&gt;

&lt;p&gt;In this article, I try to design a cashier microservice where only one
Ping++ application is needed, but multiple applications can use this
cashier microservice.&lt;/p&gt;

&lt;h1 id=&quot;design&quot;&gt;Design&lt;/h1&gt;

&lt;h2 id=&quot;general-payment-process-with-ping-&quot;&gt;General Payment Process with Ping++ &lt;sup id=&quot;fnref:pingpp_charge&quot;&gt;&lt;a href=&quot;#fn:pingpp_charge&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;+------------------------------------------+----------------+
|                                          |                |
|    STEP 1                                |   Client Side  |
|    put product into cart                 |                |
|                                          +----------------+
|    STEP 4                             STEP 7              | STEP 8
|                                       (Ping++ Client SDK) |         +--------+
|    use Order data                                         | finish  |        |
|    to apply Ping++ Charge data        use Charge data     | payment | AnyPay |
|                                       request a payment   | +-----&amp;gt; |        |
+-----------------------------------------------------------+         +--------+
  + ^                  + ^
  | |                  | |
  | | STEP 2 &amp;amp; 3       | | STEP 4                STEP 5
  | |                  | |                       (Ping++ Server SDK)
  | | apply an order   | | apply for Charge
  | |                  | |
  | | RESPONSE the     | | payload with          apply for Charge
  | | Order {_id, ...} | | previous Order data   from Ping++ Server
  | |                  | |                           +
  v +                  v +                           |
+-------------------------------------+              |     +--------+
|                                     | STEP 5       |     |        |
|                  STEP 6             | +------------+---&amp;gt; |        |
|                                     | &amp;lt;----------------+ |        |
|                  get Charge data    |                    |        |
|                  from Ping++ Server | &amp;lt;----------------+ | Ping++ |
+---------------+                     | STEP 9             | Server |
|               |  RESPONSE to View   | (Async)            |        |
| RESTful Sever |                     |                    |        |
|               |                     | Webhook            |        |
| Cashier       |                     | POST notification  |        |
|               |                     | to RESTful server  |        |
+---------------+---------------------+                    +--------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;decompressing-one-restful-server-into-multiple-services&quot;&gt;Decompressing One &lt;code class=&quot;highlighter-rouge&quot;&gt;RESTful Server&lt;/code&gt; into Multiple Services&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;+------------------------+          +-----------------------+
|                        |          |                       |
|  RESTful Server        |          |  RESTful Server       |
|                        |          |                       |
|  Static data           |          |  Order system         |
+------------------------+          +-----------------------+
 +                                   +  ^
 |                                   |  | STEP 2 &amp;amp; 3
 | STEP 1                            |  |
 | put product into cart             |  | apply an order
 |                                   |  |
 |                                   |  | RESPONSE the
 v                                   v  + Order {_id, ...}
+------------------------------------------+----------------+
|                                          |                |
|                                          |   Client Side  |
|                                          |                |
|                                          +----------------+
|    STEP 4                             STEP 7              | STEP 8
|                                       (Ping++ Client SDK) |         +--------+
|    use Order data                                         | finish  |        |
|    to apply Ping++ Charge data        use Charge data     | payment | AnyPay |
|                                       request a payment   | +-----&amp;gt; |        |
+-----------------------------------------------------------+         +--------+
  +  STEP 4              ^
  |                      |
  |  apply for Charge    |
  |                      |             STEP 5
  |  payload with        |             (Ping++ Server SDK)
  |  previous Order data |
  v                      +             apply for Charge
                                       from Ping++ Server
+-------------------------------------+                    +--------+
|                                     | +----------------&amp;gt; |        |
|                  STEP 6             | &amp;lt;----------------+ |        |
|                                     |                    |        |
|                  get Charge data    |                    |        |
|                  from Ping++ Server | &amp;lt;----------------+ | Ping++ |
+---------------+                     | STEP 9             | Server |
|               |  RESPONSE to View   | (Async)            |        |
| RESTful Sever |                     |                    |        |
|               |                     | Webhook            |        |
| Cashier       |                     | POST notification  |        |
|               |                     | to RESTful server  |        |
+---------------+---------------------+                    +--------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;cashier-microservice-design&quot;&gt;Cashier Microservice Design&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;+------------------------+          +-----------------------+
|                        |          |                       |
|  RESTful Server        |          |  RESTful Server       |
|                        |          |                       |
|  Static data           |          |  Order system         |
+------------------------+          +-----------------------+
   +                                   +  ^
   |                                   |  | STEP 2 &amp;amp; 3
   | STEP 1                            |  |
   | put product into cart             |  | apply an order
   |                                   |  |
   |                                   |  | RESPONSE the
   v                                   v  + Order {_id, ...}
 +------------------------------------------+----------------+
 |                                          |                |
 |                                          |   Client Side  |
 |                                          |                |
 |                                          +----------------+
 |    STEP 4                             STEP 7              | STEP 8
 |                                       (Ping++ Client SDK) |         +--------+
 |    use Order data                                         | finish  |        |
 |    to apply Ping++ Charge data        use Charge data     | payment | AnyPay |
 |                                       request a payment   | +-----&amp;gt; |        |
 +-----------------------------------------------------------+         +--------+
  +  STEP 4              ^
  |                      |
  |  apply for Charge    |
  |                      |             STEP 5
  |  payload with        |             (Ping++ Server SDK)
  |  previous Order data |
  v                      +             apply for Charge
                                       from Ping++ Server
+-------------------------------------+                    +--------+
|                                     | +----------------&amp;gt; |        |
|                  STEP 6             | &amp;lt;----------------+ |        |
|                                     |                    |        |
|                  get Charge data    |                    |        |
|                  from Ping++ Server | &amp;lt;----------------+ | Ping++ |
+---------------+                     | STEP 9             | Server |
|               |  RESPONSE to View   | (Async)            |        |
| RESTful Sever |                     |                    |        |
|               |                     | Webhook            |        |
| Cashier       |                     | POST notification  |        |
|               |                     | to RESTful server  |        |
+---------------+---------------------+                    +--------+
+  ^                            +  ^
|  |  apply for Charge          |  |  apply for Charge
|  |                            |  |
|  |  payload with              |  |  payload with
|  |  GenericOrder data         |  |  GenericOrder data
|  |                            |  |
v  +                            v  +
+---------+     +---------+     +---------+
|         |     |         |     |         |
| App 1   |     | App 2   |     | App 3   |
|         |     |         |     |         |
+---------+     +---------+     +---------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;restful-api-of-cashier-microservice&quot;&gt;RESTful API of Cashier Microservice&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// STEP 4 apply for Charge data
&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;POST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cashier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;charge&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;order:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// STEP 6
&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RESPONSE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;data:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ping++&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Charge&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// STEP 9
&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;POST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cashier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webhook&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:pingpp&quot;&gt;
      &lt;p&gt;https://www.pingxx.com&amp;nbsp;&lt;a href=&quot;#fnref:pingpp&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:pingpp_charge&quot;&gt;
      &lt;p&gt;https://www.pingxx.com/docs/overview/flow/charge&amp;nbsp;&lt;a href=&quot;#fnref:pingpp_charge&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/pattern/2016/07/11/designing-cashier-microservice-with-ping-sdk</link>
        <guid>https://scozv.github.io/blog/pattern/2016/07/11/designing-cashier-microservice-with-ping-sdk</guid>
        <pubDate>2016-07-11T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>A Linear Branch Management With Git</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;

  &lt;p&gt;This article publishes a Git branch management workflow, that is brief and linear,
inspired by &lt;code class=&quot;highlighter-rouge&quot;&gt;GitFlow&lt;/code&gt; &lt;sup id=&quot;fnref:gitflow&quot;&gt;&lt;a href=&quot;#fn:gitflow&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Anti-GitFlow&lt;/code&gt; &lt;sup id=&quot;fnref:gitflow_anti_01&quot;&gt;&lt;a href=&quot;#fn:gitflow_anti_01&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&quot;fnref:gitflow_anti_02&quot;&gt;&lt;a href=&quot;#fn:gitflow_anti_02&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

  &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;gitl&lt;/code&gt;, that has not been implemented yet, is not just interface-simplified,
but also manages the underlying branches in plain.&lt;/p&gt;

  &lt;p&gt;This article is mainly written in Chinese, but I still give you the
branches drawing to illustrate this &lt;code class=&quot;highlighter-rouge&quot;&gt;gitl&lt;/code&gt; workflow.&lt;/p&gt;

  &lt;p&gt;However, the Chinese article is still not finished yet, a few points need to be
figured out.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#principles&quot; id=&quot;markdown-toc-principles&quot;&gt;Principles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#branches-within-linear-git&quot; id=&quot;markdown-toc-branches-within-linear-git&quot;&gt;Branches within Linear Git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#gitl-an-interface-for-linear-gitflow-workflow&quot; id=&quot;markdown-toc-gitl-an-interface-for-linear-gitflow-workflow&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl&lt;/code&gt;, An Interface for Linear GitFlow Workflow&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#gitl-develop-developing-in-master&quot; id=&quot;markdown-toc-gitl-develop-developing-in-master&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl develop&lt;/code&gt;, Developing in &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#gitl-feature--handling-the-feature&quot; id=&quot;markdown-toc-gitl-feature--handling-the-feature&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl feature&lt;/code&gt; , Handling the &lt;code class=&quot;highlighter-rouge&quot;&gt;feature&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#gitl-bugfix--fixing-bug-in-bugfix&quot; id=&quot;markdown-toc-gitl-bugfix--fixing-bug-in-bugfix&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl bugfix&lt;/code&gt; , Fixing Bug in &lt;code class=&quot;highlighter-rouge&quot;&gt;bugfix&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#gitl-release--for-our-three-kind-of-release&quot; id=&quot;markdown-toc-gitl-release--for-our-three-kind-of-release&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl release&lt;/code&gt; , For Our Three Kind of &lt;code class=&quot;highlighter-rouge&quot;&gt;release&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#scenario-that-need-different-branches&quot; id=&quot;markdown-toc-scenario-that-need-different-branches&quot;&gt;Scenario that need different branches&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#branch-management-for-3-kind-of-releases&quot; id=&quot;markdown-toc-branch-management-for-3-kind-of-releases&quot;&gt;Branch Management for 3 Kind of Releases&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#public-release&quot; id=&quot;markdown-toc-public-release&quot;&gt;Public Release&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sprint-release&quot; id=&quot;markdown-toc-sprint-release&quot;&gt;Sprint Release&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#bugfix-release&quot; id=&quot;markdown-toc-bugfix-release&quot;&gt;Bugfix Release&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#scenario&quot; id=&quot;markdown-toc-scenario&quot;&gt;Scenario&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#regular-developing-in-master&quot; id=&quot;markdown-toc-regular-developing-in-master&quot;&gt;Regular Developing in &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#opening-a-feature-for-experiment&quot; id=&quot;markdown-toc-opening-a-feature-for-experiment&quot;&gt;Opening a &lt;code class=&quot;highlighter-rouge&quot;&gt;feature&lt;/code&gt; for experiment&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#doing-bugfix-in-master&quot; id=&quot;markdown-toc-doing-bugfix-in-master&quot;&gt;Doing &lt;code class=&quot;highlighter-rouge&quot;&gt;bugfix&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#public-release-1&quot; id=&quot;markdown-toc-public-release-1&quot;&gt;public release&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sprint-release-1&quot; id=&quot;markdown-toc-sprint-release-1&quot;&gt;sprint release&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#bugfix-release-1&quot; id=&quot;markdown-toc-bugfix-release-1&quot;&gt;bugfix release&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#apply-bugfix-to-master&quot; id=&quot;markdown-toc-apply-bugfix-to-master&quot;&gt;Apply &lt;code class=&quot;highlighter-rouge&quot;&gt;bugfix&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#linear-git-workflow-with-ci&quot; id=&quot;markdown-toc-linear-git-workflow-with-ci&quot;&gt;Linear Git Workflow with CI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#more&quot; id=&quot;markdown-toc-more&quot;&gt;More&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;principles&quot;&gt;Principles&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Branches is plain, or linear,&lt;/li&gt;
  &lt;li&gt;An interface need to be provided,&lt;/li&gt;
  &lt;li&gt;Interface is simple, easy to invoke,&lt;/li&gt;
  &lt;li&gt;Release branch will not include the release configuration,&lt;/li&gt;
  &lt;li&gt;A build-in version naming rule is embedded in this workflow.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;branches-within-linear-git&quot;&gt;Branches within Linear Git&lt;/h1&gt;

&lt;p&gt;Notice the branch named &lt;code class=&quot;highlighter-rouge&quot;&gt;/release/3.2.0&lt;/code&gt; is a &lt;code class=&quot;highlighter-rouge&quot;&gt;sprint release&lt;/code&gt; (see &lt;strong&gt;Term&lt;/strong&gt;).
This kind of release may be removed in practice.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;                             ^
                             |
                             |
                             |                    
                             |
                             |                                                ^
      ^   OR abort feature   |                                                |
      | XXXXXXXXXXXXXXXXXXX&amp;gt; |                                                |
      |                      |                                                |
      |                      |  /release/3.0.0                                |
      |                      +-------------------&amp;gt;                            |
      |                      |                                                |
      |                      |                                                |
      |  /feature/JIRA-404   |                                                |
      +----------------------+                                                |
                             |                                                |
                             |             /release/2.0.1                     |
                             |                   ^                            |
                             |                   |                            |
                             |                   |                            |
                             |                   |                            |
                             |                   | bugfix                     |
                             |                   | on /2.0.0                  |
      ^   accept feature     |                   | release                    |
      | +------------------&amp;gt; |                   |                            |
      |                      |  /release/2.0.0   |                            |
      |                      +-------------------+                            |
      |                      |                                                |
      |  /feature/JIRA-200   |                                                |
      +----------------------+                                                |
                             |                                                |
                             |                                                |
                             |                                                |
                             |                                                |
                             |  /release/1.0.0                                |
                             +-------------------+                            +

                          /master                                 /release/3.2.0
                                                            [will explain later]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;gitl-an-interface-for-linear-gitflow-workflow&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl&lt;/code&gt;, An Interface for Linear GitFlow Workflow&lt;/h1&gt;

&lt;p&gt;This interface has not implemented yet, and the specification of this interface
is inspired by &lt;code class=&quot;highlighter-rouge&quot;&gt;GitFlow&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;gitl-develop-developing-in-master&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl develop&lt;/code&gt;, Developing in &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gitl develop &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; nil | start &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;gitl-feature--handling-the-feature&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl feature&lt;/code&gt; , Handling the &lt;code class=&quot;highlighter-rouge&quot;&gt;feature&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;定义了开始、放弃和接受feature。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gitl feature start &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;feature_name] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; master | &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch_based_on] &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
gitl feature abort &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;feature_name]
gitl feature finish &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;feature_name]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;gitl-bugfix--fixing-bug-in-bugfix&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl bugfix&lt;/code&gt; , Fixing Bug in &lt;code class=&quot;highlighter-rouge&quot;&gt;bugfix&lt;/code&gt;&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gitl bugfix start &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bugfix_name] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; master | &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch_based_on] &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
gitl bugfix abort &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bugfix_name]
gitl bugfix finish &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bugfix_name]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;gitl-release--for-our-three-kind-of-release&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitl release&lt;/code&gt; , For Our Three Kind of &lt;code class=&quot;highlighter-rouge&quot;&gt;release&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;该接口需要控制权限。&lt;/p&gt;

&lt;p&gt;如果&lt;code class=&quot;highlighter-rouge&quot;&gt;[release_number]&lt;/code&gt;为空，则基于默认的版本命名规则。&lt;/p&gt;

&lt;p&gt;不建议传递版本编号，建议使用默认的版本命名规则。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gitl release &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; -P | -S | -B &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; start &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;release_number] &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
gitl release &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; -P | -S | -B &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; abort &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;release_number] &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
gitl release &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; -P | -S | -B &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; finish &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;release_number] &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;scenario-that-need-different-branches&quot;&gt;Scenario that need different branches&lt;/h1&gt;

&lt;h2 id=&quot;branch-management-for-3-kind-of-releases&quot;&gt;Branch Management for 3 Kind of Releases&lt;/h2&gt;

&lt;p&gt;We name our version as &lt;code class=&quot;highlighter-rouge&quot;&gt;n.m.k&lt;/code&gt;, where:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;, indicates the public release,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;, for sprint release, and&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt;, for bugfix release, that is only applied for previous public release.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;public-release&quot;&gt;Public Release&lt;/h3&gt;

&lt;p&gt;After one or two mouth, we release to public.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;  step 1                                  step 2

    ^                                       ^
    |                                       |
    |                                       |
    |                                       |
    |                                       |
    |                                       |
    |                                       | rebase back
    |             ^                         | to master   ^
    |             |                         | &amp;lt;-----------# tag n.0.0
    |             # release                 |             |
    |             |                         |             |
    |             |                         |             |
    |             |                         |             |
    |             # bump version            |             # bump version
    |             |                         |             |
    |             |                         |             |
    +-------------+                         +-------------+
    |                                       |
    |      /release/n.0.0                   |      /release/n.0.0
    |                                       |
    |                                       |
    |                                       |
    |                                       |
    |                                       |
    |                                       |
    +                                       +

 /master                                 /master&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;sprint-release&quot;&gt;Sprint Release&lt;/h3&gt;

&lt;p&gt;At each end of sprint, we release the sprint for internal demo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;step 1                       step 2                       step 3

  ^                            ^                            ^
  |                            |                            | rebase back
  |                            |             ^              | to master   ^
  |                            |             |              | &amp;lt;----------+# tag n. m+1 .0
  |                            |             |              |             |
  | rebase to                  |             # bump         |             # bump version
  | sprint release             |             |              |             |
  |             ^              |  ^          |              |             |
  | +---------&amp;gt; |              |  +----------+              |             |
  |             |              |  | /release/n.m+1.0        |             |
  |             |              |  |                         |             |
  |             |              |  |                         |             |
  |             |              |  |                         |             |
  |             |              |  |                         |             |
  |             |              |  |                         |             |
  |             |              |  |                         |             |
  +-------------+              +--+                         +-------------+
  |  /release/n.m.0            | /n.m.0                     |     /release/n. m+1 .0
  |                            |                            |
  |                            |                            |
  |                            |                            |
  |                            |                            |
  |                            |                            |
  |                            |                            |
  |                            |                            |
  +                            +                            +

/master                      /master                      /master&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;bugfix-release&quot;&gt;Bugfix Release&lt;/h3&gt;

&lt;p&gt;Will fix some bug in specific public release.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;step 1                       step 2                       step 3

  ^                            ^                            ^
  |                            |                            | rebase back
  |                            |             ^              | to master   ^
  |                            |             |              | &amp;lt;----------+# tag n.0.k+1
  | bugfix release             |             |              |             |
  | is ONLY for                |             # bump         |             # bump version
  | public release             |             |              |             |
  |             ^              |  ^          |              |             |
  | +---------&amp;gt; |              |  +----------+              |             |
  |             |              |  | /release/n.0.k+1        |             |
  |             |              |  |                         |             |
  |             |              |  |                         |             |
  |             |              |  # bugfix 2                |             # bugfix 2
  |             |              |  |                         |             |
  |             |              |  # bugfix 1                |             # bugfix 1
  |             |              |  |                         |             |
  +-------------+              +--+                         +-------------+
  |  /release/n.0.k            | /n.0.k                     |     /release/n.0.k+1
  |                            |                            |
  |                            |                            |
  |                            |                            |
  |                            |                            |
  |                            |                            |
  |                            |                            |
  |                            |                            |
  +                            +                            +

/master                      /master                      /master&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;scenario&quot;&gt;Scenario&lt;/h2&gt;

&lt;h3 id=&quot;regular-developing-in-master&quot;&gt;Regular Developing in &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout master
&lt;span class=&quot;c&quot;&gt;# coding&lt;/span&gt;
git commit -avm &lt;span class=&quot;s1&quot;&gt;'JIRA-404 regular development'&lt;/span&gt;
git push&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;opening-a-feature-for-experiment&quot;&gt;Opening a &lt;code class=&quot;highlighter-rouge&quot;&gt;feature&lt;/code&gt; for experiment&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout master
git branch feature/JIRA-404
git checkout feature/JIRA-404
&lt;span class=&quot;c&quot;&gt;# coding&lt;/span&gt;
git commit -avm &lt;span class=&quot;s1&quot;&gt;'JIRA-404 feature development'&lt;/span&gt;
git push
&lt;span class=&quot;c&quot;&gt;# git push --set-upstream origin feature/JIRA-404&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果放弃feature：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 各个`fork-repo`就该分支`PR`到`center-repo`&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# `center-repo`合并各个`PR`&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# `center-repo/feature/JIRA-404`设置为只读，或者不再接受`PR` （可选）&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果接受feature：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 各个`fork-repo`就该分支`PR`到`center-repo`&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# `center-repo`合并各个`PR`&lt;/span&gt;
git checkout master
git merge -m &lt;span class=&quot;s1&quot;&gt;'JIRA-404 accept feature'&lt;/span&gt; feature/JIRA-404
git tag -a feature/JIRA-404 -m &lt;span class=&quot;s1&quot;&gt;'JIRA-404 brief description of this feature'&lt;/span&gt;
git branch -d feature/JIRA-404
git push origin :feature/JIRA-404&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;doing-bugfix-in-master&quot;&gt;Doing &lt;code class=&quot;highlighter-rouge&quot;&gt;bugfix&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 默认基于`master`&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 某位开发在自己的`fork-repo`上面开启bugfix分支，以`bugfix/JIRA-404`格式命名&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 完成修复之后&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 合并bugfix分支到`fork-repo`的master上面， 删除本地的bugfix分支&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;public-release-1&quot;&gt;public release&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout master
git branch release/n.m.0
git checkout release/n.m.0
&lt;span class=&quot;c&quot;&gt;# bump version, update ChangeLog&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# publi.sh&lt;/span&gt;
git commit -avm &lt;span class=&quot;s1&quot;&gt;'JIRA-404 description of n.m.0'&lt;/span&gt;
git tag -a n.m.0 -m &lt;span class=&quot;s1&quot;&gt;'JIRA-404 release of n.m.0'&lt;/span&gt;
git checkout master
git rebase release/n.m.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;sprint-release-1&quot;&gt;sprint release&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout release/n.m.0
git rebase master
git branch release/n.m+1.0
git checkout release/n.m+1.0
&lt;span class=&quot;c&quot;&gt;# bump version, update ChangeLog&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# publi.sh&lt;/span&gt;
git commit -avm &lt;span class=&quot;s1&quot;&gt;'JIRA-404 description of n.m+1.0'&lt;/span&gt;
git tag -a n.m+1.0 -m &lt;span class=&quot;s1&quot;&gt;'JIRA-404 release of n.m.0'&lt;/span&gt;
git checkout master
git rebase release/n.m+1.0
git branch -d release/n.m.0
git push origin :release/n.m.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;bugfix-release-1&quot;&gt;bugfix release&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout release/n.m.k
git branch bugfix/JIRA-404
git checkout bugfix/JIRA-404
&lt;span class=&quot;c&quot;&gt;# fix and test&lt;/span&gt;
git checkout release/n.m.k
git merge bugfix/JIRA-404
git branch -d bugfix/JIRA-404
git push origin :bugfix/JIRA-404&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;按照我们的版本编号规则，基于特定release上面的bugfix，会有后续的release（版本编号第三位）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout release/n.0.k
git branch release/n.0.k+1
git checkout release/n.0.k+1
&lt;span class=&quot;c&quot;&gt;# bump version, update ChangeLog&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# publi.sh&lt;/span&gt;
git commit -avm &lt;span class=&quot;s1&quot;&gt;'JIRA-404 description of n.0.k+1'&lt;/span&gt;
git tag -a n.0.k+1 -m &lt;span class=&quot;s1&quot;&gt;'JIRA-404 release of n.0.k+1'&lt;/span&gt;
git checkout master
git rebase release/n.0.k+1
git branch -d release/n.0.k
git push origin :release/n.0.k&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;apply-bugfix-to-master&quot;&gt;Apply &lt;code class=&quot;highlighter-rouge&quot;&gt;bugfix&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;需要考虑是通过patch的方式，还是rebase的方式将bugfix应用到master上面。&lt;/p&gt;

&lt;h1 id=&quot;linear-git-workflow-with-ci&quot;&gt;Linear Git Workflow with CI&lt;/h1&gt;

&lt;!-- ## 提交并测试 --&gt;

&lt;!-- ## 提交并发布 --&gt;

&lt;h1 id=&quot;more&quot;&gt;More&lt;/h1&gt;

&lt;p&gt;These problems need to be fix：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is &lt;code class=&quot;highlighter-rouge&quot;&gt;gitl&lt;/code&gt; complicated under Microservices ?&lt;/li&gt;
  &lt;li&gt;Is &lt;code class=&quot;highlighter-rouge&quot;&gt;gitl&lt;/code&gt; conflicted with git fork, see Atlassian’s &lt;em&gt;Comparing Workflows&lt;/em&gt; &lt;sup id=&quot;fnref:atl_comp_workf&quot;&gt;&lt;a href=&quot;#fn:atl_comp_workf&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; ？&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:gitflow&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;A successful Git branching model&lt;/a&gt; by Vincent Driessen, Jan 05, 2010&amp;nbsp;&lt;a href=&quot;#fnref:gitflow&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:gitflow_anti_01&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://endoflineblog.com/gitflow-considered-harmful&quot;&gt;GitFlow considered harmful&lt;/a&gt; by Adam Ruka, May 03, 2015&amp;nbsp;&lt;a href=&quot;#fnref:gitflow_anti_01&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:gitflow_anti_02&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://endoflineblog.com/follow-up-to-gitflow-considered-harmful&quot;&gt;Follow-up to ‘GitFlow considered harmful’&lt;/a&gt; by Adam Ruka, Jun 20, 2015&amp;nbsp;&lt;a href=&quot;#fnref:gitflow_anti_02&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:atl_comp_workf&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows/&quot;&gt;Comparing Workflows&lt;/a&gt; by Atlassian&amp;nbsp;&lt;a href=&quot;#fnref:atl_comp_workf&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/pattern/2016/05/18/a-linear-branch-management-with-git</link>
        <guid>https://scozv.github.io/blog/pattern/2016/05/18/a-linear-branch-management-with-git</guid>
        <pubDate>2016-05-18T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>A Loose Coupling Architecture of the Web Solution with Continuous Integration</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This article will discuss two core ideas for a Architecture of the Web Solution,
that are Loose Coupling and Continuous Integration.&lt;/p&gt;

  &lt;p&gt;The article is mainly written in Chinese, while the
English post has not been started yet.
However, I provide a drawing for indicating the Loose Coupling Architecture.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;The Loose Coupling Architecture can be explained as below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;####################################  scenario 01, entire node

+------------+              +-----------------+
| you and me |              | IIS / tomcat    |
| Chromium   +------------&amp;gt; | ASP .NET MVC    |
|            |              | Database        |
| mobile     |              |                 |
| device     |              |                 |
+------------+              +-----------------+


####################################  scenario 02, separating View from MV+C

+------------+              +-----------------+                      +--------------------+
| you and me |              | View            |    HTTP Request      | RESTful API        |
| Chromium   +------------&amp;gt; | React.js        +--------------------&amp;gt; | http://spray.io/   |
|            |              | static HTML page|                      |                    |
| mobile     |              | mobile App      |                      | Database           |
| device     |              |                 |                      |                    |
|            |              |                 | &amp;lt;--------------------+                    |
+------------+              +-----------------+    HTTP Response     +--------------------+


####################################  scenario 03, separating Database from MV

+------------+              +-----------------+                      +--------------------+
| you and me |              | View            |    HTTP Request      | RESTful API        |
| Chromium   +------------&amp;gt; | React.js        +--------------------&amp;gt; | http://spray.io/   |
|            |              | static HTML page|                      |                    |
| mobile     |              | mobile App      |                      |                    |
| device     |              |                 |                      |                    |
|            |              |                 | &amp;lt;--------------------+                    |
+------------+              +-----------------+    HTTP Response     +-+------------------+
                                                                       |
                                                                       |  connection
                                                                       |  string
                                                                       |
                                                                       |
                                                                     +-+------------------+
                                                                     | PaaS               |
                                                                     | Database+aaS       |
                                                                     |                    |
                                                                     |                    |
                                                                     |                    |
                                                                     |                    |
                                                                     +--------------------+




####################################  scenario 04, multiple Databases


                                                                      +--------------------+
                                                                      | PaaS               |
                                                                      | Database+aaS       |
                                                                      |                    |
                                                                      | Core Business      |
                                                                      |                    |
                                                                      |                    |
                                                                      +-+------------------+
                                                                        |
                                                                        | connection
                                                                        | string
                                                                        |
                                                                        |
 +-------------+             +-----------------+                      +-+------------------+
 | you and me  |             | View            |    HTTP Request      | RESTful API        |
 | Chromium    +-----------&amp;gt; | React.js        +--------------------&amp;gt; | http://spray.io/   |
 |             |             | static HTML page|                      |                    |
 | mobile      |             | mobile App      |                      |                    |
 | device      |             |                 |                      |                    |
 |             |             |                 | &amp;lt;--------------------+                    |
 +-------------+             +-----------------+    HTTP Response     +-+------------------+
                                                                        |
                                                                        | connection
                                                                        | string
                                                                        |
                                                                        |
                                                                      +-+------------------+
                                                                      | PaaS               |
                                                                      | Database+aaS       |
                                                                      |                    |
                                                                      | user-agent data    |
                                                                      |                    |
                                                                      |                    |
                                                                      +--------------------+




 ####################################  scenario 05, separating and combination

 +------------+              +-----------------+                      +--------------------+
 | you and me |              | View            |    HTTP Request      | RESTful API        |
 | Chromium   +------------&amp;gt; | React.js        +--------------------&amp;gt; | http://spray.io/   |
 |            |              | static HTML page|                      |                    |
 | mobile     |              | mobile App      |                      |                    |
 | device     |              |                 |                      |                    |
 |            |              |                 | &amp;lt;--------------------+                    |
 +------------+              +-----------------+    HTTP Response     +-+------------------+
                             | Database        |                        |
                             |                 |                        | connection
                             | user-agent data |                        | string
                             |                 |                        |
                             |                 |                        |
                             |                 |                        |
                             +-----------------+                      +-+-------------------+
                                                                      | PaaS                |
                                                                      | Database+aaS        |
                                                                      |                     |
                                                                      | Core Business       |
                                                                      |                     |
                                                                      |                     |
                                                                      +---------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/pattern/2016/05/05/a-low-coupling-architecture-of-the-web-solution-with-continuous-integration</link>
        <guid>https://scozv.github.io/blog/pattern/2016/05/05/a-low-coupling-architecture-of-the-web-solution-with-continuous-integration</guid>
        <pubDate>2016-05-05T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Fully Migrating from Bitbucket Cloud Issue System to JIRA Server</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This post will give a full migration guide from Bitbucket Cloud Issue
to JIRA Server, including:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Import legacy Bitbucket Cloud Issue into JIRA Server,&lt;/li&gt;
    &lt;li&gt;Build Dual-direction connection between Bitbucket Cloud and JIRA Server,&lt;/li&gt;
    &lt;li&gt;Upgrade the issue ticket number in git commits history,
to archive the &lt;strong&gt;FULL&lt;/strong&gt; migration.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;This post will &lt;strong&gt;NOT&lt;/strong&gt; cover the topics below:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Why I choose JIRA instead of other issue system,&lt;/li&gt;
    &lt;li&gt;Why I choose Bitbucket Cloud instead of other git server,&lt;/li&gt;
    &lt;li&gt;Why I choose Ubuntu 14.04 Server instead of other OS.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#core-ideas-of-my-understanding-of-a-project&quot; id=&quot;markdown-toc-core-ideas-of-my-understanding-of-a-project&quot;&gt;Core Ideas of My Understanding of a Project&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#loose-coupling&quot; id=&quot;markdown-toc-loose-coupling&quot;&gt;Loose Coupling&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#continuous-integration&quot; id=&quot;markdown-toc-continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#limitation-of-bitbucket-cloud-build-in-issue-system&quot; id=&quot;markdown-toc-limitation-of-bitbucket-cloud-build-in-issue-system&quot;&gt;Limitation of Bitbucket Cloud Build-in Issue System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jira-a-central-issue-system&quot; id=&quot;markdown-toc-jira-a-central-issue-system&quot;&gt;JIRA, a Central Issue System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#full-migration-guide-to-jira-server&quot; id=&quot;markdown-toc-full-migration-guide-to-jira-server&quot;&gt;Full Migration Guide to JIRA Server&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#installing-jira-server-on-ubuntu&quot; id=&quot;markdown-toc-installing-jira-server-on-ubuntu&quot;&gt;Installing JIRA Server on Ubuntu&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-a-project-in-jira&quot; id=&quot;markdown-toc-create-a-project-in-jira&quot;&gt;Create a Project in JIRA&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#import-legacy-issue-from-bitbucket-cloud&quot; id=&quot;markdown-toc-import-legacy-issue-from-bitbucket-cloud&quot;&gt;Import Legacy Issue from Bitbucket Cloud&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#setup-the-dvcs-accounts-in-jira-with-bitbucket-cloud&quot; id=&quot;markdown-toc-setup-the-dvcs-accounts-in-jira-with-bitbucket-cloud&quot;&gt;Setup the DVCS Accounts in JIRA with Bitbucket Cloud&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#setup-the-jira-link-in-bitbucket-cloud&quot; id=&quot;markdown-toc-setup-the-jira-link-in-bitbucket-cloud&quot;&gt;Setup the JIRA Link in Bitbucket Cloud&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#change-the-legacy-issue-number-of-git-history-ie-fully-migrating&quot; id=&quot;markdown-toc-change-the-legacy-issue-number-of-git-history-ie-fully-migrating&quot;&gt;Change the Legacy Issue Number of Git History, ie. Fully Migrating&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#not-a-fully-migrating&quot; id=&quot;markdown-toc-not-a-fully-migrating&quot;&gt;NOT a Fully Migrating&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#appendix&quot; id=&quot;markdown-toc-appendix&quot;&gt;Appendix&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#jira-installation-script&quot; id=&quot;markdown-toc-jira-installation-script&quot;&gt;JIRA Installation Script&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;core-ideas-of-my-understanding-of-a-project&quot;&gt;Core Ideas of My Understanding of a Project&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Loose Coupling&lt;/strong&gt; and &lt;strong&gt;CI&lt;/strong&gt; are two core ideas of my understanding
of a project.&lt;/p&gt;

&lt;h2 id=&quot;loose-coupling&quot;&gt;Loose Coupling&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;A project MUST be separated into a series of INDEPENDENT modules,&lt;/li&gt;
  &lt;li&gt;Each module will be a code repository,&lt;/li&gt;
  &lt;li&gt;The communication among these INDEPENDENT modules is not depended
on source code, it is depended on the API docs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;continuous-integration&quot;&gt;Continuous Integration&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Each module MUST contains the necessary tests with at least 80%
code covered,&lt;/li&gt;
  &lt;li&gt;An infrastructure module MUST satisfy 100% code coverage,&lt;/li&gt;
  &lt;li&gt;A RESTful Service module MUST contain the &lt;code class=&quot;highlighter-rouge&quot;&gt;FakeRequest&lt;/code&gt; BDD test,&lt;/li&gt;
  &lt;li&gt;A web page module shoud consider the web page test, such as using &lt;a href=&quot;www.seleniumhq.org&quot;&gt;Selenium&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;不写测试的代码就是耍流氓&lt;/li&gt;
  &lt;li&gt;Each module need to satisfy the Commit Acceptance Policy &lt;sup id=&quot;fnref:CAP01&quot;&gt;&lt;a href=&quot;#fn:CAP01&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;:
    &lt;ul&gt;
      &lt;li&gt;The source commit message must contain a valid issue number(s),&lt;/li&gt;
      &lt;li&gt;All issues referenced in the commit message must be UNRESOLVED,&lt;/li&gt;
      &lt;li&gt;All issues referenced in the commit message must be assigned to the committer.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Every commit to any module need to be build and tested on CI server,&lt;/li&gt;
  &lt;li&gt;Committer will be noticed when the commit leaded a failure build or test,&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Each code commit can be traced to the issue system&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Each issue can be traced to a series of commits&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;The environment of each iterative build should be independent,&lt;/li&gt;
  &lt;li&gt;Continuous build, deployment and more…&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;limitation-of-bitbucket-cloud-build-in-issue-system&quot;&gt;Limitation of Bitbucket Cloud Build-in Issue System&lt;/h1&gt;

&lt;p&gt;If we want to build a library system (the project code is &lt;code class=&quot;highlighter-rouge&quot;&gt;LS&lt;/code&gt;),
we may separate the project into a series of repositories (modules) below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls-core-restful&lt;/code&gt;: A core RESTful service, including user management, book management,
and borrowing management,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls-web-user&lt;/code&gt;: A web page system for user to send the borrowing request,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls-web-admin&lt;/code&gt;: A web page system for library staff to approve the borrowing request,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls-core-model&lt;/code&gt;: An infrastructure data model in JavaScript (or TypeScript) shared by two web page systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(This separation is only used for the example, it may not be a perfect module
  architecture)&lt;/p&gt;

&lt;p&gt;We create a project with code name &lt;code class=&quot;highlighter-rouge&quot;&gt;LS&lt;/code&gt; in Bitbucket Cloud.&lt;/p&gt;

&lt;p&gt;We create four repositories under &lt;code class=&quot;highlighter-rouge&quot;&gt;LS&lt;/code&gt; in Bitbucket Cloud:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;ls-core-restful.git
ls-core-model.git
ls-web-user.git
ls-web-admin.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If we raise an issue saying:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;Login page should be designed and implemented&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Where we open the issue in the Bitbucket Cloud build-in Issue System?
In Bitbucket Cloud, the build-in issue system is not share in project,
we have to raise an individual issue in each repo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ls-core-model.git/issue/1&lt;/span&gt;
Implement the User model
&lt;span class=&quot;c&quot;&gt;# ls-core-restful.git/issue/1&lt;/span&gt;
Implement the login with token authentication service
&lt;span class=&quot;c&quot;&gt;# ls-web-user/issue/1&lt;/span&gt;
Implement the user login page
&lt;span class=&quot;c&quot;&gt;# ls-web-admin/issue/1&lt;/span&gt;
Implement the admin authorization page&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The limitation of Bitbucket Cloud build-in Issue System is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Not a central issue system,&lt;/li&gt;
  &lt;li&gt;Have to grant access right of &lt;code class=&quot;highlighter-rouge&quot;&gt;ls-core-restful&lt;/code&gt; to other committers.
This has been violating the &lt;strong&gt;Loose Coupling&lt;/strong&gt; principle, cause we just need
to expose an API docs of &lt;code class=&quot;highlighter-rouge&quot;&gt;ls-core-restful&lt;/code&gt;
to committers of other repositories,&lt;/li&gt;
  &lt;li&gt;The commit history of “Login page implementation” has to be
separated into different repositories,
violating the &lt;strong&gt;Continuous Integration&lt;/strong&gt; principle.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;jira-a-central-issue-system&quot;&gt;JIRA, a Central Issue System&lt;/h1&gt;

&lt;p&gt;We need a Central Issue System that can be synced with multiple source code
repositories. I choose JIRA 6.4.13 + JIRA Agile deploying on the environment
below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;Ubuntu 14.04.4 LTS
mysql  Ver 14.14 Distrib 5.5.47,
  &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;debian-linux-gnu &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x86_64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; using readline 6.3
openjdk version &lt;span class=&quot;s2&quot;&gt;&quot;1.8.0_72-internal&quot;&lt;/span&gt;
OpenJDK Runtime Environment &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 1.8.0_72-internal-b15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
OpenJDK 64-Bit Server VM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 25.72-b15, mixed mode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Atlassian JIRA Project Management Software
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v6.4.13#64028-sha1:b7939e9&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
JIRA Agile 6.7.12
JIRA Commit Acceptance Plugin 1.6.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Currently, my deployment of JIRA 6 + Agile works smoothly with Bitbucket Cloud.
We can:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Raise only one issue that need code changes on multiple repositories,&lt;/li&gt;
  &lt;li&gt;Push code to Bitbucket Cloud,
then review the commit history in JIRA issue page,&lt;/li&gt;
  &lt;li&gt;Configure Bitbucket Cloud, so that the commit history page can link to
the JIRA issue.&lt;/li&gt;
  &lt;li&gt;[TODO] Reject push that committed to Bitbucket Cloud if this commit violates
the JIRA Acceptance Policy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;full-migration-guide-to-jira-server&quot;&gt;Full Migration Guide to JIRA Server&lt;/h1&gt;

&lt;h2 id=&quot;installing-jira-server-on-ubuntu&quot;&gt;Installing JIRA Server on Ubuntu&lt;/h2&gt;

&lt;p&gt;Atlassian provides an official installation guide &lt;sup id=&quot;fnref:ATL_jira_install&quot;&gt;&lt;a href=&quot;#fn:ATL_jira_install&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.
Meet the system requirement, and pay attention on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Neither MariaDB nor PerconaDB are supported &lt;sup id=&quot;fnref:ATL_maria_null&quot;&gt;&lt;a href=&quot;#fn:ATL_maria_null&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&quot;fnref:ATL_maria_null_2&quot;&gt;&lt;a href=&quot;#fn:ATL_maria_null_2&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;,&lt;/li&gt;
  &lt;li&gt;Atlassian JIRA Commit Acceptance Plugin is only support for JIRA Server 5.0 - 6.4.13,&lt;/li&gt;
  &lt;li&gt;For JIRA Server 6.1 - 7.1.4, we can use Midori Commit Policy Plugin for JIRA &lt;sup id=&quot;fnref:CAP02&quot;&gt;&lt;a href=&quot;#fn:CAP02&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; with a paid license.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I provide a installation &lt;code class=&quot;highlighter-rouge&quot;&gt;sh&lt;/code&gt; file for quick installation and configuration of MySQL, see appendix below.&lt;/p&gt;

&lt;h2 id=&quot;create-a-project-in-jira&quot;&gt;Create a Project in JIRA&lt;/h2&gt;

&lt;p&gt;Supposing that we have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deployed the JIRA Server, and can access &lt;code class=&quot;highlighter-rouge&quot;&gt;https://jira.domain.com&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;Configured the User and Group,&lt;/li&gt;
  &lt;li&gt;Login as the JIRA administrator.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We now create a project with the JIRA code &lt;code class=&quot;highlighter-rouge&quot;&gt;LS&lt;/code&gt;, the ticket number of
each issue will be prepended with &lt;code class=&quot;highlighter-rouge&quot;&gt;LS&lt;/code&gt;, such as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;LS-101 Hello JIRA&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;import-legacy-issue-from-bitbucket-cloud&quot;&gt;Import Legacy Issue from Bitbucket Cloud&lt;/h2&gt;

&lt;p&gt;JIRA administrator can import the legacy issue from Bitbucket Cloud into JIRA:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;http://jira.domain.com/secure/admin/views/ExternalImport1.jspa&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;setup-the-dvcs-accounts-in-jira-with-bitbucket-cloud&quot;&gt;Setup the DVCS Accounts in JIRA with Bitbucket Cloud&lt;/h2&gt;

&lt;p&gt;When we push the code to Bitbucket Cloud, we want to disply the commit history
in JIRA issue page, setting up the OAuth in Bitbucket Cloud and DVCS Accounts
in JIRA will satisfy our request.&lt;/p&gt;

&lt;p&gt;Please read the official guide &lt;sup id=&quot;fnref:ATL_dvcs&quot;&gt;&lt;a href=&quot;#fn:ATL_dvcs&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;According to the Atlassian Support, the DVCS will refresh status
from Bitbucket Cloud every 60 minutes &lt;sup id=&quot;fnref:DCON-379&quot;&gt;&lt;a href=&quot;#fn:DCON-379&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;. That means when we
push commits to Bitbucket Cloud, the JIRA issue page may not reflect
the latest commits immediately.&lt;/p&gt;

&lt;h2 id=&quot;setup-the-jira-link-in-bitbucket-cloud&quot;&gt;Setup the JIRA Link in Bitbucket Cloud&lt;/h2&gt;

&lt;p&gt;We want to display the hyperlink in Bitbucket Cloud commit history page.
Adding a JIRA link in repository setting will satisfy our request.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to repository setting, find the Integrations - Links:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;https://bitbucket.org/scozv/ls-core-restful/admin/links&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Click the JIRA icon,&lt;/li&gt;
  &lt;li&gt;Fill the JIRA website and the JIRA project code, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;LS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Save&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the new source commit, such as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;git commit -avm &lt;span class=&quot;s1&quot;&gt;'LS-101 Hello JIRA'&lt;/span&gt;
git push&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;we have the hyperlink in commit history page of Bitbucket Cloud, leading to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;http://jira.domain.me/browse/LS-101&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;change-the-legacy-issue-number-of-git-history-ie-fully-migrating&quot;&gt;Change the Legacy Issue Number of Git History, ie. Fully Migrating&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;sha1&lt;/code&gt; of all commits will be rewritten (changed) in the step below;&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Make backup and decision.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In individual Bitbucket Cloud build-in Issue System, the
issue number is started from &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;. For Bitbucket Cloud, we commit code
using message such as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;git commit -avm &lt;span class=&quot;s1&quot;&gt;'fix issue #101 Hello Bitbucket'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After importing the Bitbucket Issue into JIRA System, issue &lt;code class=&quot;highlighter-rouge&quot;&gt;101&lt;/code&gt; becomes to
issue &lt;code class=&quot;highlighter-rouge&quot;&gt;LS-101&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We want to change the Legacy git history to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;fix issue LS-101 Hello Bitbucket&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We need the Message Filter of git command &lt;sup id=&quot;fnref:GIT&quot;&gt;&lt;a href=&quot;#fn:GIT&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;–msg-filter &lt;command /&gt;&lt;/p&gt;

  &lt;p&gt;This is the filter for rewriting the commit messages. The argument is evaluated in the shell with the original commit message on standard input; its standard output is used as the new commit message.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the script:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# The `sha1` of all commits will be rewritten (changed) in the step below;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Make backup and decision.&lt;/span&gt;
git clone --no-hardlinks git@bitbucket.org:scozv/ls-core-restful.git
git filter-branch -f --msg-filter &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'sed &quot;s/#\([0-9][0-9]*\)/LS-\1/g&quot;'&lt;/span&gt;
git reset --hard
git gc --aggressive
git prune&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;not-a-fully-migrating&quot;&gt;NOT a Fully Migrating&lt;/h1&gt;

&lt;p&gt;I haven’t found the solution for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Resolved JIRA issue is not displayed as a &lt;del&gt;deleted HTML element&lt;/del&gt; in Bitbucket Cloud,&lt;/li&gt;
  &lt;li&gt;Bitbucket Cloud doesn’t reject the bad commit if the commit violates the Acceptance Policy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the 2nd issue, Atlassian Support replied me as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unfortunately, this is not possible to be done on Bitbucket Cloud for now.
We have a feature request on this though:
  https://bitbucket.org/site/master/issues/5658&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;appendix&quot;&gt;Appendix&lt;/h1&gt;

&lt;h2 id=&quot;jira-installation-script&quot;&gt;JIRA Installation Script&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# JAVA&lt;/span&gt;
sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update
sudo apt-get install -y openjdk-8-jdk openjdk-8-jre openjdk-8-jre-headless

&lt;span class=&quot;c&quot;&gt;# MySQL&lt;/span&gt;
sudo apt-get install -y mysql-server mysql-client

&lt;span class=&quot;c&quot;&gt;# JIRA&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# JIRA_BINARY=&quot;atlassian-jira-software-7.1.2-jira-7.1.2-x64.bin&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;JIRA_BINARY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;atlassian-jira-6.4.13-x64.bin&quot;&lt;/span&gt;
wget -nc -P ~/Downloads/ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;https://www.atlassian.com/software/jira/downloads/binary/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JIRA_BINARY&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

chmod a+x ~/Downloads/&lt;span class=&quot;nv&quot;&gt;$JIRA_BINARY&lt;/span&gt;
sudo bash ~/Downloads/&lt;span class=&quot;nv&quot;&gt;$JIRA_BINARY&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;JIRA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/opt/atlassian/jira&quot;&lt;/span&gt;

sudo vi &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/setenv.sh
&lt;span class=&quot;c&quot;&gt;# JVM_SUPPORT_RECOMMENDED_ARGS=&quot;-Datlassian.plugins.enable.wait=300 -Xms64m -Xmx256m -Xss2m -XX:MaxPermSize=128m&quot;&lt;/span&gt;
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/stop-jira.sh
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/start-jira.sh

&lt;span class=&quot;c&quot;&gt;# sudo bash /opt/atlassian/jira/uninstall&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# JIRA MySQL&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://confluence.atlassian.com/jira/connecting-jira-to-mysql-185729489.html&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;MS_JIRA_DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jiradb
&lt;span class=&quot;nv&quot;&gt;MS_JIRA_DBUSER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jiradbuser
&lt;span class=&quot;nv&quot;&gt;MS_JIRA_PWD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*ABCDEFJHIGKLMNOPQRSTUVWXYZ&quot;&lt;/span&gt;
mysql -uroot -p
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;CREATE USER &lt;span class=&quot;s1&quot;&gt;'$MS_JIRA_DBUSER'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt; IDENTIFIED BY PASSWORD &lt;span class=&quot;s1&quot;&gt;'$MS_JIRA_PWD'&lt;/span&gt;;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;CREATE DATABASE &lt;span class=&quot;nv&quot;&gt;$MS_JIRA_DB&lt;/span&gt; CHARACTER SET utf8 COLLATE utf8_bin;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER,INDEX
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;| on &lt;span class=&quot;nv&quot;&gt;$MS_JIRA_DB&lt;/span&gt;.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; TO &lt;span class=&quot;s1&quot;&gt;'$MS_JIRA_DBUSER'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;| IDENTIFIED BY PASSWORD &lt;span class=&quot;s1&quot;&gt;'$MS_JIRA_PWD'&lt;/span&gt;;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;flush privileges;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;SHOW GRANTS FOR &lt;span class=&quot;s1&quot;&gt;'$MS_JIRA_DBUSER'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;;

&lt;span class=&quot;nv&quot;&gt;MYSQL_CONF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/etc/mysql/my.cnf&quot;&lt;/span&gt;
sudo cp &lt;span class=&quot;nv&quot;&gt;$MYSQL_CONF&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$MYSQL_CONF&lt;/span&gt;.before_JIRA
sudo sed -i &lt;span class=&quot;s1&quot;&gt;'/^default_storage_engine/c\default_storage_engine=INNODB'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$MYSQL_CONF&lt;/span&gt;
sudo sed -i &lt;span class=&quot;s1&quot;&gt;'/^max_allowed_packet/c\max_allowed_packet=256M'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$MYSQL_CONF&lt;/span&gt;
sudo sed -i &lt;span class=&quot;s1&quot;&gt;'/innodb_log_file_size/c\innodb_log_file_size=256M'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$MYSQL_CONF&lt;/span&gt;
sudo sed -i &lt;span class=&quot;s1&quot;&gt;'/^sql_mode.*=.*NO_AUTO_VALUE_ON_ZERO/c\#sql_mode = NO_AUTO_VALUE_ON_ZERO'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$MYSQL_CONF&lt;/span&gt;
sudo bash /etc/init.d/mysql stop
sudo bash /etc/init.d/mysql start

&lt;span class=&quot;nv&quot;&gt;JIRA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/opt/atlassian/jira&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;MYSQL_J_BINARY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mysql-connector-java-5.1.38.tar.gz&quot;&lt;/span&gt;
wget -nc -P ~/Downloads/ &lt;span class=&quot;s2&quot;&gt;&quot;http://dev.mysql.com/get/Downloads/Connector-J/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MYSQL_J_BINARY&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
sudo tar zxf ~/Downloads/&lt;span class=&quot;nv&quot;&gt;$MYSQL_J_BINARY&lt;/span&gt; -C &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/lib/
sudo cp &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/lib/mysql-connector-java-5.1.38/mysql-connector-java-5.1.38-bin.jar  &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/lib/
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/stop-jira.sh
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/start-jira.sh

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/jvm/java-8-openjdk-amd64/
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/config.sh
&lt;span class=&quot;c&quot;&gt;# https://confluence.atlassian.com/jira/connecting-jira-to-mysql-185729489.html&lt;/span&gt;
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/stop-jira.sh
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/start-jira.sh

&lt;span class=&quot;c&quot;&gt;## JIRA 6 only&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://marketplace.atlassian.com/plugins/com.atlassian.jira.ext.commitacceptance/server/installation&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://confluence.atlassian.com/display/UPM/Installing+Add-ons#Installingadd-ons-installingversion1InstallingPlugins1typeadd-onsinJIRAandBamboo&lt;/span&gt;
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/stop-jira.sh
&lt;span class=&quot;nv&quot;&gt;JIRA_CAP_BINARY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;commitacceptance-1.6.0.jar&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;JIRA_ADDON_SITE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://marketplace-cdn.atlassian.com/files/artifact/5f9ba63d-ee6c-4633-9b7a-a26c644a2434&quot;&lt;/span&gt;
wget -nc -P ~/Downloads/ &lt;span class=&quot;nv&quot;&gt;$JIRA_ADDON_SITE&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$JIRA_CAP_BINARY&lt;/span&gt;
sudo cp ~/Downloads/&lt;span class=&quot;nv&quot;&gt;$JIRA_CAP_BINARY&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/atlassian-jira/WEB-INF/lib/
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/start-jira.sh

&lt;span class=&quot;c&quot;&gt;## stop-jira&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;JIRA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/opt/atlassian/jira&quot;&lt;/span&gt;
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/stop-jira.sh
sudo bash /etc/init.d/mysql stop
&lt;span class=&quot;c&quot;&gt;## start-jira&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;JIRA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/opt/atlassian/jira&quot;&lt;/span&gt;
sudo bash /etc/init.d/mysql start
sudo bash &lt;span class=&quot;nv&quot;&gt;$JIRA_HOME&lt;/span&gt;/bin/start-jira.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:CAP01&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://marketplace.atlassian.com/plugins/com.atlassian.jira.ext.commitacceptance/server/overview&quot;&gt;JIRA Commit Acceptance Plugin&lt;/a&gt; by Atlassian, Version 1.6.0 • JIRA Server 5.0 - 6.4.13 • Released 2012-02-22&amp;nbsp;&lt;a href=&quot;#fnref:CAP01&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:ATL_jira_install&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://confluence.atlassian.com/adminjiraserver071/installing-jira-applications-on-linux-802592173.html&quot;&gt;Installing JIRA applications on Linux&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:ATL_jira_install&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:ATL_maria_null&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://confluence.atlassian.com/adminjiraserver071/supported-platforms-802592168.html&quot;&gt;JIRA Supported Platforms&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:ATL_maria_null&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:ATL_maria_null_2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://jira.atlassian.com/browse/JRA-32347&quot;&gt;JIRA should support MariaDB&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:ATL_maria_null_2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:CAP02&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://marketplace.atlassian.com/plugins/com.midori.jira.plugin.jira-commit-policy-plugin/server/overview&quot;&gt;Commit Policy Plugin for JIRA&lt;/a&gt; by Midori Global Consulting Kft.&amp;nbsp;&lt;a href=&quot;#fnref:CAP02&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:ATL_dvcs&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://confluence.atlassian.com/bitbucket/connect-bitbucket-cloud-to-jira-server-applications-814208991.html&quot;&gt;Connect Bitbucket Cloud to JIRA Server applications&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:ATL_dvcs&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:DCON-379&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://jira.atlassian.com/browse/DCON-379&quot;&gt;Allow configurable refresh times for commit checks&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:DCON-379&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:GIT&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://git-scm.com/docs/git-filter-branch&quot;&gt;git-filter-branch - Rewrite branches&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:GIT&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/guide/2016/04/05/fully-migrating-from-bitbucket-cloud-issue-system-to-jira-server</link>
        <guid>https://scozv.github.io/blog/guide/2016/04/05/fully-migrating-from-bitbucket-cloud-issue-system-to-jira-server</guid>
        <pubDate>2016-04-05T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>How Do We Apply the Hyde Theme to Existing Jekyll Site?</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This article will describe the process of applying Hyde theme on my existing Jekyll Bootstrap site.
And this approach can be used for applying any theme of Jekyll. The main ideas of integrating the 3rd Jekyll Theme
are:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;knowing the basic structure of Jekyll site,&lt;/li&gt;
    &lt;li&gt;knowing the basic workflow of rendering HTML from Jekyll scripts,&lt;/li&gt;
    &lt;li&gt;comparing the code differences between &lt;code class=&quot;highlighter-rouge&quot;&gt;Hyde&lt;/code&gt; and your site,&lt;/li&gt;
    &lt;li&gt;replacing code and test.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#before-applying&quot; id=&quot;markdown-toc-before-applying&quot;&gt;Before Applying…&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#start-a-branch-for-hyde&quot; id=&quot;markdown-toc-start-a-branch-for-hyde&quot;&gt;Start a Branch for Hyde&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#no-need-to-be-a-master-of-css-or-html&quot; id=&quot;markdown-toc-no-need-to-be-a-master-of-css-or-html&quot;&gt;NO Need to be a Master of CSS or HTML&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction-of-jekyll&quot; id=&quot;markdown-toc-introduction-of-jekyll&quot;&gt;Introduction of Jekyll&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#the-directory-structure-of-jekyll&quot; id=&quot;markdown-toc-the-directory-structure-of-jekyll&quot;&gt;the Directory Structure of Jekyll&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#html-rendering-workflow&quot; id=&quot;markdown-toc-html-rendering-workflow&quot;&gt;HTML Rendering Workflow&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#_layouthtml-the-entrance-of-html&quot; id=&quot;markdown-toc-_layouthtml-the-entrance-of-html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./_layout/*.html&lt;/code&gt;, the Entrance of HTML&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#_includesjb-the-utilities-scripts-as-the-html-rendering-helper&quot; id=&quot;markdown-toc-_includesjb-the-utilities-scripts-as-the-html-rendering-helper&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/JB/*&lt;/code&gt;, the Utilities Scripts as the HTML Rendering Helper&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#_includesthemes-the-layout-design-of-the-theme&quot; id=&quot;markdown-toc-_includesthemes-the-layout-design-of-the-theme&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/themes/&lt;/code&gt;, the Layout Design of the Theme&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#assetsthemes-the-css-design-javascript-or-image-of-the-theme&quot; id=&quot;markdown-toc-assetsthemes-the-css-design-javascript-or-image-of-the-theme&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./assets/themes/&lt;/code&gt;, the CSS design, JavaScript or image of the Theme&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#steps-of-installing-hyde-into-existing-site&quot; id=&quot;markdown-toc-steps-of-installing-hyde-into-existing-site&quot;&gt;Steps of Installing Hyde into Existing Site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusions&quot; id=&quot;markdown-toc-conclusions&quot;&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#encore&quot; id=&quot;markdown-toc-encore&quot;&gt;Encore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;before-applying&quot;&gt;Before Applying…&lt;/h1&gt;

&lt;h2 id=&quot;start-a-branch-for-hyde&quot;&gt;Start a Branch for Hyde&lt;/h2&gt;

&lt;p&gt;Applying the Hyde to your existing Jekyll site is not a one-click step, so open a branch for Hyde applying,
In case when you fail to apply Hyde and you want to revert changes and start over again.&lt;/p&gt;

&lt;h2 id=&quot;no-need-to-be-a-master-of-css-or-html&quot;&gt;NO Need to be a Master of CSS or HTML&lt;/h2&gt;

&lt;p&gt;I have very limited experience on CSS or HTML, so CSS for me is like RegEx, I can always check the CSS references,
or seek help from stackoverflow when I face a styling problem.&lt;/p&gt;

&lt;h1 id=&quot;introduction-of-jekyll&quot;&gt;Introduction of Jekyll&lt;/h1&gt;

&lt;h2 id=&quot;the-directory-structure-of-jekyll&quot;&gt;the Directory Structure of Jekyll&lt;/h2&gt;

&lt;p&gt;Check the official document on the folder structure of Jekyll:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://jekyllrb.com/docs/structure/&quot;&gt;Directory structure&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For me, I used &lt;a href=&quot;https://github.com/dbtek/jekyll-bootstrap-3&quot;&gt;Jekyll-bootstrap 3&lt;/a&gt; before.
the directory structure has a little bit difference comparing with the original Jekyll.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;.
├── assets
|   ├── css
|   ├── js
|   ├── img
|   └── themes
|       ├── &lt;span class=&quot;c&quot;&gt;# hyde&lt;/span&gt;
|       └── bootstrap
├── _includes
|   ├── JB
|   |   ├── comments_render_script
|   |   ├── pages_list_script
|   |   ├── analytics_render_script
|   └── themes
|       ├── &lt;span class=&quot;c&quot;&gt;# hyde&lt;/span&gt;
|       └── bootstrap
|           ├── default.html
|           ├── page.html
|           └── post.html
├── _layouts
|   ├── default.html
|   ├── page.html
|   └── post.html&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice that there are two folders named &lt;code class=&quot;highlighter-rouge&quot;&gt;themes&lt;/code&gt;, I will explain more letter.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;Hyde&lt;/code&gt; theme will be installed into these two &lt;code class=&quot;highlighter-rouge&quot;&gt;themes/&lt;/code&gt; folder.
You may read the source code and it’s easy to understand their usage.&lt;/p&gt;

&lt;h2 id=&quot;html-rendering-workflow&quot;&gt;HTML Rendering Workflow&lt;/h2&gt;

&lt;p&gt;This section will list the steps of rendering HTML by Jekyll.
Again, reading the source code is useful, and it can help you apply other plugin / themes
to your existing Jekyll site.&lt;/p&gt;

&lt;h3 id=&quot;_layouthtml-the-entrance-of-html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./_layout/*.html&lt;/code&gt;, the Entrance of HTML&lt;/h3&gt;

&lt;p&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;_layout&lt;/code&gt; folder is used for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;configuration of the theme name,&lt;/li&gt;
  &lt;li&gt;including the theme layout files, or installing the &lt;strong&gt;part&lt;/strong&gt; of theme into your site.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read the source code of any &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; file in &lt;code class=&quot;highlighter-rouge&quot;&gt;_layout&lt;/code&gt; folder, and notice that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a variable named &lt;code class=&quot;highlighter-rouge&quot;&gt;layout.theme.name&lt;/code&gt; has been defined in these &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; files, and it may be used for Jekyll 3.
see &lt;a href=&quot;https://github.com/scozv/scozv.github.com/issues/15#issuecomment-195689664&quot;&gt;issue #15&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;make sure the path correct in &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;_includesjb-the-utilities-scripts-as-the-html-rendering-helper&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/JB/*&lt;/code&gt;, the Utilities Scripts as the HTML Rendering Helper&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JB&lt;/code&gt; stands for &lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll Bootstrap&lt;/code&gt;, in this folder, you can find many useful scripts that are used for
rendering a &lt;code class=&quot;highlighter-rouge&quot;&gt;part&lt;/code&gt; of HTML:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do you want to display the comment section in your post,&lt;/li&gt;
  &lt;li&gt;define some global variable, see &lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/JB/setup&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The scripts in &lt;code class=&quot;highlighter-rouge&quot;&gt;JB/&lt;/code&gt; are mainly used in &lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/themes/*&lt;/code&gt;,
You will figure out the usage of utilities by searching &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;_includes/JB/setup&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;_includesthemes-the-layout-design-of-the-theme&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/themes/&lt;/code&gt;, the Layout Design of the Theme&lt;/h3&gt;

&lt;p&gt;The HTML layout design of theme, Jekyll Bootstrap or Hyde, can be found in this folder.&lt;/p&gt;

&lt;h3 id=&quot;assetsthemes-the-css-design-javascript-or-image-of-the-theme&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./assets/themes/&lt;/code&gt;, the CSS design, JavaScript or image of the Theme&lt;/h3&gt;

&lt;h1 id=&quot;steps-of-installing-hyde-into-existing-site&quot;&gt;Steps of Installing Hyde into Existing Site&lt;/h1&gt;

&lt;p&gt;Comparing the &lt;code class=&quot;highlighter-rouge&quot;&gt;Hyde&lt;/code&gt; project to your existing site will tell you which files you need
to install. The steps below based on my previous site.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;open a branch for Hyde,&lt;/li&gt;
  &lt;li&gt;put &lt;code class=&quot;highlighter-rouge&quot;&gt;hyde/public&lt;/code&gt; into your &lt;code class=&quot;highlighter-rouge&quot;&gt;./assets/themes/hyde/&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;put &lt;code class=&quot;highlighter-rouge&quot;&gt;hyde/_layout&lt;/code&gt; into your &lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/themes/hyde/&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;also put &lt;code class=&quot;highlighter-rouge&quot;&gt;hyde/_includes&lt;/code&gt; into your &lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/themes/hyde/&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;see commit &lt;a href=&quot;https://github.com/scozv/scozv.github.com/commit/235f6f6b303988a2208404ea071c9b2c05a97031?diff=split&quot;&gt;235f6f6b3039&lt;/a&gt;
for files including,&lt;/li&gt;
  &lt;li&gt;compare the existing theme folder with &lt;code class=&quot;highlighter-rouge&quot;&gt;hyde&lt;/code&gt; to determine the changes on &lt;code class=&quot;highlighter-rouge&quot;&gt;hyde&lt;/code&gt; layout, for me,
I compared &lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/theme/bootstrap&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/theme/hyde&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;do a code review of &lt;code class=&quot;highlighter-rouge&quot;&gt;./_includes/theme/hyde&lt;/code&gt; based on your comparasion, make sure you merge the existing layout and
correct path into &lt;code class=&quot;highlighter-rouge&quot;&gt;Hyde&lt;/code&gt; theme, see my commit
&lt;a href=&quot;https://github.com/scozv/scozv.github.com/commit/1b2f41a34f3a81e7789a4dcaf4750163ef7fda28&quot;&gt;1b2f41a3&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;change the theme name in &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;, see my commit
&lt;a href=&quot;https://github.com/scozv/scozv.github.com/commit/4743d50aa0a04456005b1ced9c480880e342dd69&quot;&gt;4743d50a&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;customize your site, see
    &lt;ul&gt;
      &lt;li&gt;git commit -m ‘&lt;a href=&quot;https://github.com/scozv/scozv.github.com/commit/b3c26850d164f77485e1c3cd041a61680cffc92c&quot;&gt;change on footer&lt;/a&gt;’,&lt;/li&gt;
      &lt;li&gt;git commit -m ‘&lt;a href=&quot;https://github.com/scozv/scozv.github.com/commit/4291fdc0dc42ad18d5fd72c1fbf2fd92d6a60fd9&quot;&gt;enhanced related_posts&lt;/a&gt;’,&lt;/li&gt;
      &lt;li&gt;git commit -m ‘&lt;a href=&quot;https://github.com/scozv/scozv.github.com/commit/89e9d8fdd22780d714f5fe12ae2180be0e5c1074&quot;&gt;tags and about&lt;/a&gt;’.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;test and release.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h1&gt;

&lt;p&gt;For installing the theme of Jekyll:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git flow feature start theme_name&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;copy CSS design into &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt; folder,&lt;/li&gt;
  &lt;li&gt;copy layout design into &lt;code class=&quot;highlighter-rouge&quot;&gt;_inlucdes/themes&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;change the configuration,&lt;/li&gt;
  &lt;li&gt;compare code differences for issue solving,&lt;/li&gt;
  &lt;li&gt;test and improving.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;encore&quot;&gt;Encore&lt;/h1&gt;

&lt;p&gt;I am not with rich experiences on CSS and Jekyll, even on ruby. I mostly
write &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;React.js /&amp;gt;&lt;/code&gt;, so I will not spend much time on Jekyll
theme unless someday, I have to.&lt;/p&gt;

&lt;p&gt;So, in my opinion, Jekyll is used for writing the posts with coding, not used to
keep decorating with Themes, unless designing becomes my major.&lt;/p&gt;

&lt;p&gt;So, is there anyone can help me on a little design requirement below?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For the post page including a Table of Content, short as &lt;code class=&quot;highlighter-rouge&quot;&gt;[toc]&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;reader scroll down the page, when he or she cannot see the &lt;code class=&quot;highlighter-rouge&quot;&gt;[toc]&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;I want to move the &lt;code class=&quot;highlighter-rouge&quot;&gt;[toc]&lt;/code&gt; to the left sidebar automaticly,&lt;/li&gt;
  &lt;li&gt;the mobile screen may need for another design,&lt;/li&gt;
  &lt;li&gt;the main idea of this requirement is to select the section easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</description>
        <link>https://scozv.github.io/blog/guide/2016/03/18/how-do-we-apply-the-hyde-theme-to-existing-jekyll-site</link>
        <guid>https://scozv.github.io/blog/guide/2016/03/18/how-do-we-apply-the-hyde-theme-to-existing-jekyll-site</guid>
        <pubDate>2016-03-18T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>A Version Controlled Project Workflow for Requirement, Coding and Continuous Integration</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This article introduces a project workflow based on VCS
(Version Controll System). The principle of this workflow is
&lt;strong&gt;Put everything into VCS&lt;/strong&gt;.&lt;/p&gt;

  &lt;p&gt;For documents, Word or PDF files are not recommended in this workflow,
just because they are difficult to be compared (such as, by &lt;code class=&quot;highlighter-rouge&quot;&gt;git diff&lt;/code&gt;).
So we write the documents in Markdown or LaTeX.&lt;/p&gt;

  &lt;p&gt;Besides, this article will cover, but it is mainly written in Chinese:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Issue system for tracking task&lt;/li&gt;
    &lt;li&gt;Bitbucket&lt;/li&gt;
    &lt;li&gt;c9.io&lt;/li&gt;
    &lt;li&gt;Markdown in 5 minutes&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

</description>
        <link>https://scozv.github.io/blog/pattern/2015/09/04/a-vcs-project-workflow-for-requirement-coding-and-ci</link>
        <guid>https://scozv.github.io/blog/pattern/2015/09/04/a-vcs-project-workflow-for-requirement-coding-and-ci</guid>
        <pubDate>2015-09-04T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Introduction of Building Documents with LaTeX</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This article will give brief introduction for &lt;code class=&quot;highlighter-rouge&quot;&gt;TeX&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;LaTeX&lt;/code&gt;, then discuss a few issues during using &lt;code class=&quot;highlighter-rouge&quot;&gt;LaTeX&lt;/code&gt;
and how to display &lt;code class=&quot;highlighter-rouge&quot;&gt;LaTeX&lt;/code&gt; equation on web page.&lt;/p&gt;

  &lt;p&gt;This article is mainly written in Chinese.&lt;/p&gt;

  &lt;p&gt;If you want to know the KaTeX with Jekyll,
you can reach &lt;a href=&quot;http://xuc.me/blog/KaTeX-and-Jekyll/&quot;&gt;this post&lt;/a&gt;.
A &lt;code class=&quot;highlighter-rouge&quot;&gt;LaTeX&lt;/code&gt; template will be provided.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;katex-not-mathjax&quot;&gt;KaTeX, not MathJax&lt;/h1&gt;

&lt;p&gt;The render speed of &lt;code class=&quot;highlighter-rouge&quot;&gt;MathJax&lt;/code&gt; is too slow,
while the &lt;code class=&quot;highlighter-rouge&quot;&gt;KaTeX&lt;/code&gt; from &lt;a href=&quot;https://khan.github.io/KaTeX/&quot;&gt;Khan Acedemy&lt;/a&gt; team,
will render all equation with pure &lt;code class=&quot;highlighter-rouge&quot;&gt;CSS&lt;/code&gt;, and it will render your &lt;code class=&quot;highlighter-rouge&quot;&gt;LaTeX&lt;/code&gt;
equation as fast as you can imagine.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;e^x = \lim_{n\rightarrow \infty} \sum_{t=0}^{n} ( \frac{1}{t!}\cdot x^t )= \sum_{t=0}^{\infty} (1 + x + \frac{1}{2!}x^2+\frac{1}{3!}x^3+ ... + \frac{1}{t!}\cdot x^t)&lt;/script&gt;

&lt;p&gt;If you want to know more details with KaTeX for Jekyll,
you can read &lt;a href=&quot;http://xuc.me/blog/KaTeX-and-Jekyll/&quot;&gt;this post&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;a-sample-of-latex-template&quot;&gt;A Sample of LaTeX Template&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-tex&quot; data-lang=&quot;tex&quot;&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[a4paper]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;book&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% shortcut for scozv's github homepage&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;hyperref&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\scozv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;https://github.com/scozv&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% shortcut for \ding{213}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\To&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\ding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;213&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;listings, color&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% shortcut for inline code snippet, like `code` in markdown&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% \newcommand{\cd}[1]{\colorbox[rgb]{0.86,0.86,0.86}{\lstinline$#1$}}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;[1]&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\lstinline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;$}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% shortcut for section, subsection, subsubsection&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% mb stands for member&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\mb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;[1]&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\subsection*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;#1&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\mmb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;[1]&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\subsubsection*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;#1&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% set style for multiple lines code snippet&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\lstset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;numbers=left, numberstyle=&lt;span class=&quot;k&quot;&gt;\tiny&lt;/span&gt;
	, stepnumber=2, numbersep=5pt
	, backgroundcolor=&lt;span class=&quot;k&quot;&gt;\color&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[rgb]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;0.86,0.86,0.86&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	, basicstyle=&lt;span class=&quot;k&quot;&gt;\footnotesize\ttfamily&lt;/span&gt;
	, breaklines=true&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% set index&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;multind&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\makeindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;idx&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;finance&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\idxf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;[1]&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;idx&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;finance&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;#1&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% heading&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\setcounter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;secnumdepth&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;3&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% set multi-ref&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;multibib&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\bibnamec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;References of Programming&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcites&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;c&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\bibnamec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\bibnamef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;References of Finance&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newcites&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;f&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\bibnamef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% CJK for XeTeX&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% http://www.ctan.org/pkg/xetexref&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% https://zh.wikipedia.org/wiki/XeTeX&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% http://ctan.org/pkg/xecjk&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;xltxtra, xeCJK&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\setCJKmainfont&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[BoldFont=Adobe Heiti Std]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Adobe Song Std&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\xeCJKsetup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;AutoFakeBold=true, CJKmath=true&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% Latin&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;fontspec, pifont&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\setmainfont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Gentium Book Basic&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;%[ItalicFont=Gentium Book Basic Bold]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% intertext, trigleq and proof&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;amsmath, amssymb, amsthm&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% bold emphasized text&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\makeatletter&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\DeclareRobustCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\%&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\@&lt;/span&gt;nomath&lt;span class=&quot;k&quot;&gt;\em&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\if&lt;/span&gt; b&lt;span class=&quot;k&quot;&gt;\expandafter\@&lt;/span&gt;car&lt;span class=&quot;k&quot;&gt;\f&lt;/span&gt;@series&lt;span class=&quot;k&quot;&gt;\@&lt;/span&gt;nil
  &lt;span class=&quot;k&quot;&gt;\normalfont&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\bfseries&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\fi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\makeatother&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% tiny margin note&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\makeatletter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\long\def\@&lt;/span&gt;ympar#1&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\%&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\@&lt;/span&gt;savemarbox&lt;span class=&quot;k&quot;&gt;\@&lt;/span&gt;marbox&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\small&lt;/span&gt; #1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;%&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\global\setbox\@&lt;/span&gt;currbox&lt;span class=&quot;k&quot;&gt;\copy\@&lt;/span&gt;marbox
  &lt;span class=&quot;k&quot;&gt;\@&lt;/span&gt;xympar&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\makeatother&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% reduce the space of itemize&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\wideitemsep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\setlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\wideitemsep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;.5&lt;span class=&quot;k&quot;&gt;\itemsep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\addtolength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\wideitemsep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;-7pt&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\let\olditem\item&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\setlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\itemsep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\wideitemsep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\olditem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Introduction of Building Documents with LaTeX&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Scott&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Aug, 12, 2015&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\maketitle&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\chapter*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\centering&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;\begin{normalsize}&lt;/span&gt;Abstract&lt;span class=&quot;nt&quot;&gt;\end{normalsize}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\begin{quotation}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\noindent&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;% abstract text&lt;/span&gt;
This artical will give brief introduction for TeX and LaTeX,
then discuss a few issues during using LaTeX
and how to display LaTeX eqation on web page.
Finally, a LaTeX template will be attached in Appendix.
&lt;span class=&quot;nt&quot;&gt;\end{quotation}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\clearpage&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% no indent of second ... paragraphs of each section&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\setlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\parindent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;0pt&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\setlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\parskip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;1.3ex plus 0.5ex minus 0.3ex&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\part&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Part I&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\chapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;C01-01&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;p1&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;c01&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\part&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Part II&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\chapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;C02-01&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;p2&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;c01&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\chapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;C02-02&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;p2&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;c02&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;\cleardoublepage&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\phantomsection&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\addcontentsline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;toc&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;chapter&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\bibnamec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\bibliographystylec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;GBT7714-2005NLang&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\bibliographyc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;code/ref&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;\makeatletter&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;% Put section depth at the same level as \chapter.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\renewcommand*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\toclevel&lt;/span&gt;@section&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;0&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\printindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;idx&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;finance&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;Index of Finance&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;% Put section depth back to its default value.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\renewcommand*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\toclevel&lt;/span&gt;@section&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\makeatother&lt;/span&gt;  

  &lt;span class=&quot;k&quot;&gt;\cleardoublepage&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\phantomsection&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\addcontentsline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;toc&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;chapter&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\bibnamef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\bibliographystylef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;GBT7714-2005NLang&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;\bibliographyf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;finance/ref&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\appendix&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\part&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Appendix&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\chapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Appendix I&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;appendix&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

</description>
        <link>https://scozv.github.io/blog/guide/2015/08/12/introduction-of-building-documents-with-latex</link>
        <guid>https://scozv.github.io/blog/guide/2015/08/12/introduction-of-building-documents-with-latex</guid>
        <pubDate>2015-08-12T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>Understand Monads in C#</title>
        <description>
&lt;h1 class=&quot;no_toc&quot; id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;This article is a reading note for &lt;em&gt;Monads&lt;/em&gt; &lt;sup id=&quot;fnref:EL13&quot;&gt;&lt;a href=&quot;#fn:EL13&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; by Eric Lippert.
And the note is mainly written in Chinese.&lt;/p&gt;

  &lt;p&gt;For me, Monad is a pipe line, transferring the input data,
including the operator and sending to the next port. Monad will
calculate the input at the end of this pipe line, and will
never break this pipe rule, nor throw error out.&lt;/p&gt;

  &lt;p&gt;For more details, please read the English references.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;Eric Lippert indicates in his article &lt;sup id=&quot;fnref:EL13-8&quot;&gt;&lt;a href=&quot;#fn:EL13-8&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You might have noticed that the asynchronous, lazy, on-demand and sequence monads all have an interesting common property: when you apply a function to any of these monads, what you get back is an object that will perform that function in the future. Essentially, the bind function takes an immutable workflow and its subsequent step, and returns you the resulting new workflow. The bind operator does not execute the workflow; it makes a new workflow out of an old one.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The bind operator is call &lt;code class=&quot;highlighter-rouge&quot;&gt;SelectMany&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;C#&lt;/code&gt;, or &lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;Scala&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Wes Dyer also summarized that we need &lt;code class=&quot;highlighter-rouge&quot;&gt;Unit&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Bind&lt;/code&gt; and the Three rules &lt;sup id=&quot;fnref:WD08&quot;&gt;&lt;a href=&quot;#fn:WD08&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;static M&amp;lt;T&amp;gt;  Unit&amp;lt;T&amp;gt;(T value);
static M&amp;lt;R&amp;gt;  Bind&amp;lt;T, R&amp;gt;(M&amp;lt;T&amp;gt;, Func&amp;lt;T, M&amp;lt;R&amp;gt;&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Left Identity&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bind(Unit(e), k) = k(e)
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Right Identity&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bind(m, Unit) = m
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;结合律&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bind(m, x =&amp;gt; Bind(k(x), y =&amp;gt; h(y)) = Bind(Bind(m, x =&amp;gt; k(x)), y =&amp;gt; h(y))
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:EL13&quot;&gt;
      &lt;p&gt;Eric Lippert. &lt;a href=&quot;http://ericlippert.com/category/monads&quot;&gt;Monads&lt;/a&gt;[J/OL] 2013&amp;nbsp;&lt;a href=&quot;#fnref:EL13&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:EL13-8&quot;&gt;
      &lt;p&gt;Eric Lippert. &lt;a href=&quot;http://ericlippert.com/2013/03/18/monads-part-eight/&quot;&gt;Monads, Part 8&lt;/a&gt;[J/OL] 2013.03.18&amp;nbsp;&lt;a href=&quot;#fnref:EL13-8&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:WD08&quot;&gt;
      &lt;p&gt;Wes Dyer. &lt;a href=&quot;http://blogs.msdn.com/b/wesdyer/archive/2008/01/11/the-marvels-of-monads.aspx&quot;&gt;The Marvels of Monads&lt;/a&gt;[J/OL] 2008&amp;nbsp;&lt;a href=&quot;#fnref:WD08&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <link>https://scozv.github.io/blog/pattern/2014/06/20/understand-monads-in-c</link>
        <guid>https://scozv.github.io/blog/pattern/2014/06/20/understand-monads-in-c</guid>
        <pubDate>2014-06-20T00:00:00+08:00</pubDate>
      </item>
    
  
    
    
  
    
      <item>
        <title>How to Make Code of Tango.js Run in Node.js as in Browser</title>
        <description>
&lt;blockquote&gt;
  &lt;p&gt;I have planed to run unit test by reading file as the input for algorithm like graph algorithm for a few months (see &lt;a href=&quot;https://github.com/scozv/algo-js/issues/18&quot; title=&quot;issue #18&quot;&gt;issue #18&lt;/a&gt;). However, it is not easy or effective to read local file from browser, even using &lt;code class=&quot;highlighter-rouge&quot;&gt;FileReader&lt;/code&gt; in JavaScript. An alternative way is that we can read file  using the file system of Node.js, where we write JavaScript code as in browser.&lt;/p&gt;

  &lt;p&gt;So the top proiority is &lt;strong&gt;making codes run appropriately in Node.js as they run in browser&lt;/strong&gt;, including the codes of unit tests. I am going to tell the details of this process today:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Making codes of algorithm work in Node.js, and&lt;/li&gt;
    &lt;li&gt;Making codes of unit tests work in Node.js, and&lt;/li&gt;
    &lt;li&gt;Introduce CI into my project.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a name=&quot;pi&quot;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;window-and-global&quot;&gt;window and global&lt;/h2&gt;
&lt;p&gt;In browser, we have the global variable named &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;window.Array&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Math&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;window.Math&lt;/code&gt;, etc. The &lt;strong&gt;Tango.js&lt;/strong&gt; also plugs object into &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(function (sorting, undefined) {
    sorting.mergeSort = function () {};
})(window.Sorting = window.Sorting || {})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So that we can sort an array in browser using the script below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Sorting.mergeSort(3, 1, 4, 1, 5, 9, 2, 6);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;More than that, in Tango.js, I extend &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Math&lt;/code&gt; directly:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(function (array, undefined) {
    array.zip = function (a, b) {};
    array.prototype.clone = function () {};
})(window.Array = window.Array || {})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It is not a good practice that we change the object in &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; directly. But in my opinion, &lt;strong&gt;the most important part in Tango.js is Algo(rithm), not js.&lt;/strong&gt; So I just want to use a simple way, instead of introducing a global module named like &lt;code class=&quot;highlighter-rouge&quot;&gt;Algo&lt;/code&gt; which we have to write like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Algo.Sorting.mergeSort();
Algo.Array.zip();
Algo.Array.clone();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Following this idea of simplification, I load the code of algorithm into the global variable in Node.js named &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; (see &lt;a href=&quot;https://github.com/scozv/algo-js/blob/master/qunit/q.js&quot; title=&quot;a file named q.js&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./qunit/q.js&lt;/code&gt;&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;window = global;

require('../src/t.js')
require('../src/x.array.js');
require('../src/sorting.js');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Look, we give the &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; an alias name at first, so that we do not need to change any codes of algorithm. Again, my idea of simplification is that:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It is not a good practice that we change the object in &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; directly. But the most important part in Tango.js is Algo(rithm), not js.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;By the way, I did try to exposure module using &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;, but I failed to figure out a way, in Node.js, to exposure ONLY one module named &lt;code class=&quot;highlighter-rouge&quot;&gt;Sorting&lt;/code&gt; from three files: sorting.js, sorting.mergeSort.js, and sorting.quickSort.js as they are something like partial class.&lt;/p&gt;

&lt;h2 id=&quot;node-qunit&quot;&gt;node-qunit&lt;/h2&gt;
&lt;p&gt;After loading objects of algorithm into &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt;, we are going to find out how to run previous codes of unit test in Node.js without modifying test scripts.&lt;/p&gt;

&lt;p&gt;We use the project &lt;a href=&quot;https://github.com/kof/node-qunit&quot; title=&quot;node-qunit, Port of QUnit unit testing framework to nodejs&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;node-qunit&lt;/code&gt;&lt;/a&gt;, which allow us to run unit test like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd algo-js
$ npm install node-qunit
$ node # or nodejs in ubuntu
&amp;gt; require('./qunit/q.js'); /*loading algorithm code into global*/
&amp;gt; var qunit = require('qunit');
&amp;gt; qunit.run({
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; code: './qunit/q.js',
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; tests: ['./qunit/q-sorting.js']},
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; function (err, report) {
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; 	console.log(err ? err : report);
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; });
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;grunt&quot;&gt;Grunt&lt;/h2&gt;
&lt;p&gt;Grunt, as it says, is a JavaScript task runner. If you configure your project, you will run unit test using command below which helps us use Continuous Integration:
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ grunt test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We use &lt;a href=&quot;https://npmjs.org/package/grunt-node-qunit&quot; title=&quot;Grunt task running node-qnuit&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grunt-node-qunit&lt;/code&gt;&lt;/a&gt; plugin for grunt task, which is Grunt task running &lt;a href=&quot;https://github.com/kof/node-qunit&quot; title=&quot;node-qunit, Port of QUnit unit testing framework to nodejs&quot;&gt;node-qunit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is the list of &lt;em&gt;How to&lt;/em&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;configure project’s &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm init
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;install &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt-cli&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm i -g grunt-cli
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;add grunt dependencies into project (see &lt;a href=&quot;http://gruntjs.com/getting-started#package.json&quot; title=&quot;grunt configuration on package.json&quot;&gt;official docs&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;install &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm i grunt --save-dev
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;add &lt;code class=&quot;highlighter-rouge&quot;&gt;Gruntfile.js&lt;/code&gt; to resister task&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module.exports = function (grunt) {
   grunt.initConfig({task-name: {}});
   grunt.loadNpmTasks('grunt-node-qunit');
   grunt.registerTask('default', ['task-name']);
};
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;add test script into &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, which allow us to run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ npm test&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ grunt&lt;/code&gt; to test the configuration&lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ grunt --stack&lt;/code&gt; to debug grunt task script&lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ npm test&lt;/code&gt; to test &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; configuration&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;A little attention we should pay on is we may face an error on ubuntu says:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/bin/env: node: No such file or directory
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/joyent/node/issues/3911&quot; title=&quot;issue #3911&quot;&gt;here&lt;/a&gt; to fix it.&lt;/p&gt;

&lt;h2 id=&quot;droneio&quot;&gt;Drone.io&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://drone.io/github.com/scozv/algo-js/latest&quot;&gt;&lt;img src=&quot;https://drone.io/github.com/scozv/algo-js/status.png&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The web &lt;a href=&quot;https://drone.io/&quot; title=&quot;drone.io&quot;&gt;drone.io&lt;/a&gt; is an online CI service. There are other options of online CI.
Some advantages of drone.io are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CI for Github, Google Code and Bitbucket&lt;/li&gt;
  &lt;li&gt;CI command is hosted in drone.io, instead of a file in our project folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The CI command for Tango.js is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm -d install
npm install -g grunt-cli
npm test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;
&lt;p&gt;I am going to fix &lt;a href=&quot;https://github.com/scozv/algo-js/issues/18&quot; title=&quot;issue #18&quot;&gt;issue #18&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

</description>
        <link>https://scozv.github.io/blog/guide/2013/12/21/how-to-make-code-of-algojs-run-in-nodejs-as-in-browser</link>
        <guid>https://scozv.github.io/blog/guide/2013/12/21/how-to-make-code-of-algojs-run-in-nodejs-as-in-browser</guid>
        <pubDate>2013-12-21T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>How to Write Iterative Tarjan SCC Algorithm, Part II</title>
        <description>
&lt;blockquote&gt;
  &lt;p&gt;In &lt;a href=&quot;https://scozv.github.io/blog/algo/2013/11/10/how-to-write-iterative-tarjan-scc-algorithm-part-zero&quot; title=&quot;Tarjan, Part I&quot;&gt;previous part&lt;/a&gt;, we talked about iterative DFS, where we use a stack named  &lt;strong&gt;frontier&lt;/strong&gt; to keep the visiting order. This time, we are going to look at the iterative topological sort and Karasoju SCC algorithm.&lt;/p&gt;

  &lt;p&gt;The key idea of my iterative topological sort is use another stack named &lt;strong&gt;head&lt;/strong&gt; to track when we finish visiting all descendant vertex of the head vertex.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a name=&quot;pi&quot;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;recursive-topological-sort&quot;&gt;Recursive Topological Sort&lt;/h2&gt;
&lt;p&gt;In the beginning, we introduce the code of recursive topological sort:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;topologicalSortRec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numberOfVertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;DFS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// recursive search graph g,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// from the initial node i&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAdjacentVertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isVisited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;DFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markVisited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isVisited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;DFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As we notice, we get the topological order from recursive DFS. The proof of correctness will be found at Wikipedia or online course &lt;a href=&quot;https://www.coursera.org/course/algo&quot; title=&quot;Online course by Tim Roughgarden&quot;&gt;&lt;em&gt;Algorithms: Design and Analysis, Part 1&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;call-stack&quot;&gt;Call Stack&lt;/h2&gt;

&lt;p&gt;Take a directed graph represented by adjacency list below for instance.&lt;/p&gt;

&lt;p&gt;1: [2, 4]
  2: &lt;a href=&quot;https://github.com/scozv/tango&quot; title=&quot;Tango.js&quot;&gt;3&lt;/a&gt;
  3: [5]
  4: [3, 5]&lt;/p&gt;

&lt;p&gt;(Please draw this simple graph on the paper to help understand. &lt;code class=&quot;highlighter-rouge&quot;&gt;1: [2, 4]&lt;/code&gt; means there are only two edges from vertex 1, that are 1 → 2 and 1 → 4.)&lt;/p&gt;

&lt;p&gt;Here is the call stack of recursive topological sort. In each loop at current &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;, we list its parent vertex in column titled &lt;strong&gt;P&lt;/strong&gt;. If all of descendant vertex of &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt; which we list in column titled &lt;code class=&quot;highlighter-rouge&quot;&gt;v.c()&lt;/code&gt; have been visited, we set the &lt;code class=&quot;highlighter-rouge&quot;&gt;order(v)&lt;/code&gt;.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;P&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;v.c()&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Action&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;{2, 4}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;initial call&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;{3}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;{5}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(5) = 5, back to __p__arent &lt;code class=&quot;highlighter-rouge&quot;&gt;v#3&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(3) = 4, back to __p__arent &lt;code class=&quot;highlighter-rouge&quot;&gt;v#2&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(2) = 3, back to __p__arent &lt;code class=&quot;highlighter-rouge&quot;&gt;v#1&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;{4}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(4) = 2, back to __p__arent &lt;code class=&quot;highlighter-rouge&quot;&gt;v#1&lt;/code&gt; (initial call)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(1) = 1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;inspiration&quot;&gt;Inspiration&lt;/h2&gt;

&lt;p&gt;According to &lt;em&gt;Part Zero&lt;/em&gt;, we add &lt;code class=&quot;highlighter-rouge&quot;&gt;frontier&lt;/code&gt; to call stack table as below.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;P&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;v.c()&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;frontier&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Action&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;{2, 4}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;initial call&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;{3}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2, 3&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;{5}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2, 3, 5&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2, 3, 5&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(5) = 5, back to __p__arent &lt;code class=&quot;highlighter-rouge&quot;&gt;v#3&lt;/code&gt;, pop frontier&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2, 3&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(3) = 4, back to __p__arent &lt;code class=&quot;highlighter-rouge&quot;&gt;v#2&lt;/code&gt;, pop frontier&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(2) = 3, back to __p__arent &lt;code class=&quot;highlighter-rouge&quot;&gt;v#1&lt;/code&gt;, pop frontier&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;{4}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(4) = 2, back to __p__arent &lt;code class=&quot;highlighter-rouge&quot;&gt;v#1&lt;/code&gt; (initial call), pop frontier&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;order(1) = 1, pop frontier, then frontier is empty&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If we look into the &lt;code class=&quot;highlighter-rouge&quot;&gt;frontier&lt;/code&gt; and the time when descendant vertex array is empty, we may notice the top of &lt;code class=&quot;highlighter-rouge&quot;&gt;frontier&lt;/code&gt; is the vertex we visit currently.&lt;/p&gt;

&lt;h2 id=&quot;stack-head&quot;&gt;Stack Head&lt;/h2&gt;

&lt;p&gt;So we introduce a stack named &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt; to track the time when we finish visiting all descendant vertex of the head vertex (current &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iterTopologicalSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numberOfVertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*head may be empty here*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// we hit the time to set order&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markVisited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// current is just a child of some v&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAdjacentVertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isVisited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// end for&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// end else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// end while&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Running the iterative code, we update the stack table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;frontier&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Action&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;initial call&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 2&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2, 3&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 2, 3&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2, 3, 5&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 2, 3, 5&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2, 3, 5&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;peek()&lt;/code&gt; eqauls, set order(5), pop two stacks&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 2, 3&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2, 3&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;peek()&lt;/code&gt; eqauls, set order(3), pop two stacks&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 2&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4, 2&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;peek()&lt;/code&gt; eqauls, set order(2), pop two stacks&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1, 4&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;peek()&lt;/code&gt; eqauls, set order(4), pop two stacks&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(1&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;peek()&lt;/code&gt; eqauls, set order(1), pop two stacks&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As we see, The time of finishing visit all descendant of current &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;, and to set order(current) is when &lt;code class=&quot;highlighter-rouge&quot;&gt;peek()&lt;/code&gt; eqauls, i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;head.peek() == frontier.peek()&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;attention&quot;&gt;Attention&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Empty Head&lt;/strong&gt;. At line 10, &lt;code class=&quot;highlighter-rouge&quot;&gt;head.peek()&lt;/code&gt; may throw an exception if &lt;code class=&quot;highlighter-rouge&quot;&gt;head.isEmpty()&lt;/code&gt;. We can check it before each &lt;code class=&quot;highlighter-rouge&quot;&gt;peek()&lt;/code&gt;, or we can push &lt;code class=&quot;highlighter-rouge&quot;&gt;-1&lt;/code&gt; (whatever bottom item) to make sure head is always contains item(s) before &lt;code class=&quot;highlighter-rouge&quot;&gt;frontier.isEmpty()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Vertex Status&lt;/strong&gt;. Same issue may be occurred similarly as in iterative DFS we mentioned in last part. (see &lt;a href=&quot;https://github.com/scozv/algo-js/issues/20&quot; title=&quot;Issue 20&quot;&gt;issue #20&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;kosaraju-scc&quot;&gt;Kosaraju SCC&lt;/h2&gt;
&lt;p&gt;Kosaraju SCC algorithm, which runs DFS twice, finds some kind of visiting order in the first DFS. So we can find topological sort order as in the first DFS, then use the order for the second DFS.&lt;/p&gt;

&lt;h2 id=&quot;running-time&quot;&gt;Running Time&lt;/h2&gt;
&lt;p&gt;Roughly speaking, the running time of iterarive topological sort is same as time of DFS.
The time of Kosaraju SCC which runs DFS twice, is still &lt;script type=&quot;math/tex&quot;&gt;O(m+n)&lt;/script&gt;.&lt;/p&gt;

&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;
&lt;p&gt;See code on details in &lt;code class=&quot;highlighter-rouge&quot;&gt;graph.search.js&lt;/code&gt; of &lt;a href=&quot;https://github.com/scozv/tango&quot; title=&quot;Tango.js&quot;&gt;Tango.js&lt;/a&gt;. And next post, I am going to explain iterative Tarjan SCC algorithm, which cost me a few time.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

</description>
        <link>https://scozv.github.io/blog/algo/2013/11/23/how-to-write-iterative-tarjan-scc-algorithm-part-one</link>
        <guid>https://scozv.github.io/blog/algo/2013/11/23/how-to-write-iterative-tarjan-scc-algorithm-part-one</guid>
        <pubDate>2013-11-23T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>How to Write Iterative Tarjan SCC Algorithm, Part I</title>
        <description>
&lt;blockquote&gt;
  &lt;p&gt;During the work on &lt;a href=&quot;https://github.com/scozv/tango&quot; title=&quot;Tango.js&quot;&gt;Tango.js&lt;/a&gt;, I found there is a limitation on recursive stack size of JavaScript. This series posts describe the way to convert recursive Tarjan SCC algorithm to iterative one, containing:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Part I: Iterative BFS and DFS algorithm on graph;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://scozv.github.io/blog/algo/2013/11/23/how-to-write-iterative-tarjan-scc-algorithm-part-one&quot; title=&quot;Tarjan, Part II&quot;&gt;Part II&lt;/a&gt;: Iterative topological sort and Kosaraju SCC algorithm on graph;&lt;/li&gt;
    &lt;li&gt;Part III: Iterative Tarjan SCC algorithm on graph.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a name=&quot;pi&quot;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;recursive-dfs&quot;&gt;Recursive DFS&lt;/h2&gt;

&lt;p&gt;It is easy to write down a recursive BFS or DFS algorithm on graph. Take DFS for example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// do something on this node and mark it as visited&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAdjacentVertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// then we DFS on each adjacent vertex of this node&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isVisited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;DFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markVisited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The call of recursive function is managed by a stack, we may see ‘Call Stack’, or ‘Error Stack’ in some IDE tools. Recursive function is brief, and it is easy to understand sometimes. But if there is limitation on stack size, We may try to write it as iterative way.&lt;/p&gt;

&lt;h2 id=&quot;call-stack&quot;&gt;Call Stack&lt;/h2&gt;

&lt;p&gt;Firstly, we see what happen in recursive DFS above, for the graph with only two paths:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 → 2 → 3
1 → 4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;we call &lt;code class=&quot;highlighter-rouge&quot;&gt;DFS(1)&lt;/code&gt;, find &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;2,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; as adjacent vertex, then we call &lt;code&gt;DFS&lt;sub&gt;1&lt;/sub&gt;(2)&lt;/code&gt; (notation  &lt;code&gt;DFS&lt;sub&gt;i&lt;/sub&gt;(j)&lt;/code&gt; means the parent call of &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; in stack is &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;). Next call  &lt;code&gt;DFS&lt;sub&gt;2&lt;/sub&gt;(3)&lt;/code&gt; finding &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; as adjacent vertex of &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; and finish &lt;code&gt;DFS&lt;sub&gt;1&lt;/sub&gt;(2)&lt;/code&gt;. Finally  call  &lt;code&gt;DFS&lt;sub&gt;1&lt;/sub&gt;(4)&lt;/code&gt; and finish &lt;code class=&quot;highlighter-rouge&quot;&gt;DFS(1)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;stack-frontier&quot;&gt;Stack Frontier&lt;/h2&gt;

&lt;p&gt;If we have a stack named &lt;code class=&quot;highlighter-rouge&quot;&gt;frontier&lt;/code&gt;, we push &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; at first, then pop to visit &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;. Push &lt;code class=&quot;highlighter-rouge&quot;&gt;[4, 2]&lt;/code&gt;, and pop &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;. Next push &lt;code class=&quot;highlighter-rouge&quot;&gt;[3]&lt;/code&gt; as adjacent vertex of &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; (the stack is &lt;code class=&quot;highlighter-rouge&quot;&gt;( 4, 3 &amp;gt;&lt;/code&gt; now). Finally pop &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; to finish search.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Row Index&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Current &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Action&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;frontier&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;initial call&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;( 1 &amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;find &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;2,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; as adjacent vertex of &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;( 4, 2 &amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;pop &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; to visit&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;( 4 &amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;find &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;( 4, 3 &amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;pop &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt; to visit&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;( 4 &amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;pop &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; to visit&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;empty&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;(notation &lt;code class=&quot;highlighter-rouge&quot;&gt;( &amp;gt;&lt;/code&gt; specifies we push and pop from right side)&lt;/p&gt;

&lt;h2 id=&quot;attentions&quot;&gt;Attentions&lt;/h2&gt;

&lt;p&gt;There are two things we need to pay attentions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Visiting Order&lt;/strong&gt;. At row index 1, we push &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; at first, in order to visit graph as same order of recursive call. However this is not very important, I just want to sync the order of iterative way and the order of recursive way. Pushing &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; at first or pushing &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; at first will get correct topological order or SCC, which we are going to find out at following two parts.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Vertex Status&lt;/strong&gt;. If we have only two paths in graph like: &lt;code class=&quot;highlighter-rouge&quot;&gt;1 → 2 → 3&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;1 → 3 → 4&lt;/code&gt;. We have stack like this:&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;Row Index&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;Current &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;Action&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;frontier&lt;/code&gt;&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;initial call&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;( 1 &amp;gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;find &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;2,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; as adjacent vertex of &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;( 3, 2 &amp;gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;pop &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; to visit&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;( 3 &amp;gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;find &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;( 3, 3 &amp;gt;&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;(notation &lt;code class=&quot;highlighter-rouge&quot;&gt;( &amp;gt;&lt;/code&gt; specifies we push and pop from right side)&lt;/p&gt;

    &lt;p&gt;We may notice at row index 3, we push duplicate &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt; into frontier. So we need a vertex status to mark vertex as being visited or being pushed into stack (see &lt;a href=&quot;https://github.com/scozv/algo-js/issues/8&quot; title=&quot;Issue 8&quot;&gt;issue #8&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;running-time&quot;&gt;Running Time&lt;/h2&gt;
&lt;p&gt;Here is simplified code of iterative DFS:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 0. initialize stack, O(1)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 1. for all vertex, O(|V|)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 1.0 visit current vertex, O(1)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 1.1 process all vertex out from the current&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAdjacentVertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// process each adjacent vertex of the current one&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In our code (comment 1.1) below, for each vertex, we process its adjacent vertex,
which we find from outgoing edges of current vertex.
We let the number of outgoing edges of vertex &lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;e_i&lt;/script&gt;,
and &lt;script type=&quot;math/tex&quot;&gt;n=\|V\|, m=\|E\|&lt;/script&gt; as the number of vertex and number of edges respectively, so we write the running time as following:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;T = O(1) + \sum_{i=1}^{n} \left [ O(1) + e_i \right ]&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= O(1) + \sum_{i=1}^{n}O(1) + \sum_{i=1}^{n}e_i&lt;/script&gt;

&lt;p&gt;And notice that the sum of outgoing edges of all vertex is the the number of all edges, that is &lt;script type=&quot;math/tex&quot;&gt;\sum_{i=1}^{n}e_i=\left \|E \right \|=m&lt;/script&gt;, so we have:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;T=O(1)+O(n)+O(m)=O(n+m)&lt;/script&gt;

&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;

&lt;p&gt;Read code in &lt;code class=&quot;highlighter-rouge&quot;&gt;graph.search.js&lt;/code&gt; on &lt;a href=&quot;https://github.com/scozv/tango&quot; title=&quot;Tango.js&quot;&gt;Tango.js&lt;/a&gt;, and reference &lt;a href=&quot;http://blog.moertel.com/posts/2013-05-11-recursive-to-iterative.html&quot; title=&quot;Recursive to Iterative by Tom Moertel&quot;&gt;this series of posts&lt;/a&gt; by Tom Moertel for more details on &lt;em&gt;Recursive to Iterative&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://scozv.github.io/blog/algo/2013/11/23/how-to-write-iterative-tarjan-scc-algorithm-part-one&quot; title=&quot;Tarjan, Part II&quot;&gt;Next&lt;/a&gt; part of this series, I am going to describe some ideas on iterative topological order algorithm which can be applied on Kosaraju SCC algorithm.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

</description>
        <link>https://scozv.github.io/blog/algo/2013/11/10/how-to-write-iterative-tarjan-scc-algorithm-part-zero</link>
        <guid>https://scozv.github.io/blog/algo/2013/11/10/how-to-write-iterative-tarjan-scc-algorithm-part-zero</guid>
        <pubDate>2013-11-10T00:00:00+08:00</pubDate>
      </item>
    
  
    
      <item>
        <title>How to Update Heap in Dijkstra Shortest Path Algorithm</title>
        <description>
&lt;blockquote&gt;
  &lt;p&gt;When we use a &lt;strong&gt;heap&lt;/strong&gt; to improve the runing time of Dijkstra shortest path algorithm from &lt;script type=&quot;math/tex&quot;&gt;O(nm)&lt;/script&gt; to &lt;script type=&quot;math/tex&quot;&gt;O(n \ln m)&lt;/script&gt;, we may find that it is not easy to keep the heap in heap order just using insert() or delete(). This post describes the update of that heap.&lt;/p&gt;

  &lt;p&gt;I suppose that you might:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;know how to wirte Dijkstra algorithm with &lt;script type=&quot;math/tex&quot;&gt;O(nm)&lt;/script&gt; running time, and&lt;/li&gt;
    &lt;li&gt;know how to use heap.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a name=&quot;pi&quot;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To speed up the finding minimum length of path in each stage in Dijkstra shortest path algorithm, we can use a binary heap to store frontier path, according to many words, like &lt;a href=&quot;http://en.wikipedia.org/wiki/Heap_(data_structure)#Applications&quot; title=&quot;Wikipedia&quot;&gt;&lt;em&gt;Heap Application&lt;/em&gt;&lt;/a&gt;, or Tim Roughgarden’s &lt;a href=&quot;https://www.coursera.org/course/algo&quot; title=&quot;Algorithms: Design and Analysis, Part 1&quot;&gt;algorithm course&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dijstra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Heap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isEmpty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// O(logn) on pop() instead of O(n)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//   from linear selection of minimum length&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;edgesOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isVisisted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// update path length on v in frontier&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;weightOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It sounds easy, however the 1st revision of &lt;code class=&quot;highlighter-rouge&quot;&gt;dijkstra()&lt;/code&gt; in Tango.js is failed to update heap correctly, where I just update the value of one vertex without keeping heap order.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__labelAt__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// not visited, update each in frontier&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__id__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// end if, unvisited&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;How to update and keep heap order?&lt;/p&gt;

&lt;p&gt;While, when we update the MinHeap, it means that we may replace the item at that index with a value &lt;strong&gt;LESS&lt;/strong&gt; than the origin one. According to the definition of minimum binary heap, each parent is less than their children. (see picture from &lt;a href=&quot;http://en.wikipedia.org/wiki/Heap_(data_structure)#Applications&quot; title=&quot;Wikipedia&quot;&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload.wikimedia.org/wikipedia/commons/6/69/Min-heap.png&quot; alt=&quot;Min Heap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So, if we replace &lt;script type=&quot;math/tex&quot;&gt;17&lt;/script&gt; with a &lt;strong&gt;LESS&lt;/strong&gt; value called &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt;.
&lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; is still less than its children,
but &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; may be less than &lt;script type=&quot;math/tex&quot;&gt;2&lt;/script&gt; (its parent).
As the algorithm of &lt;code class=&quot;highlighter-rouge&quot;&gt;push()&lt;/code&gt; of heap, we need to exchange &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; with its parent, great-parent…, until heap is ordered. That is:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;heap.swim()&lt;/code&gt; to update that heap.&lt;/strong&gt; (see &lt;a href=&quot;https://goo.gl/NssHNy&quot; title=&quot;Diff of Tango.js&quot;&gt;diff&lt;/a&gt; of revision)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__id__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// return x &amp;amp;&amp;amp; x[0] === v[0] &amp;amp;&amp;amp; (doUpdate, true)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// swim like push() in heap is important to update heap&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;frontier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__swim__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})(),&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

</description>
        <link>https://scozv.github.io/blog/algo/2013/11/03/how-to-update-heap-in-dijkstra-shortest-path</link>
        <guid>https://scozv.github.io/blog/algo/2013/11/03/how-to-update-heap-in-dijkstra-shortest-path</guid>
        <pubDate>2013-11-03T00:00:00+08:00</pubDate>
      </item>
    
  
</channel>
</rss>
